<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>珠海之旅｜去感受风，去聆听海，去触摸，去抵达</title>
      <link href="/posts/e9426d4f/"/>
      <url>/posts/e9426d4f/</url>
      
        <content type="html"><![CDATA[<div class="tip error"><p>地图可能会存在 Bug，如无法正常加载，请尝试手动刷新一下，建议使用电脑访问～ —— by 小孙同学 </p></div><p>元旦三天假期，和誉哥来到了蓄谋已久的珠海～</p><img width="500px" src="https://files.sunguoqi.com/images/202401022252701.webp"><h2 id="2023-12-30"><a href="#2023-12-30" class="headerlink" title="2023.12.30"></a>2023.12.30</h2><p>早上 8:30，我们准时出发。历时约 4 个小时，成功抵达预定宾馆。</p><div style="display:flex;justify-content:center">  <div class="strava-embed-placeholder" data-embed-type="activity" data-embed-id="10459647745" data-style="standard">  </div></div><script src="https://strava-embeds.com/embed.js"></script><!-- <img width="360px" src="https://files.sunguoqi.com/images/202401022310227.webp" /> --><p>稍作休整后，我们便准备前往周边的村子吃顿午餐。</p><div id="container-1" style="height:450px;border-radius:10px;margin:20px 0;"></div><!-- ![](https://files.sunguoqi.com/images/202401022312015.webp) --><p>小院环境很不错，有一种来到了“有风小院”的感觉（虽然这不是大理）</p><img width="360px" src="https://files.sunguoqi.com/images/202401022315809.webp"><p>午餐吃的是“铁锅姜葱炒鸡”，不过评价一般（突然怀念起家乡的炖菜，好想吃死面锅饼🥹）</p><div style="display:flex;justify-content:center;align-items:center">  <img width="360px" style="margin-right:50px !important" src="https://files.sunguoqi.com/images/202401022316984.webp">  <img width="360px" src="https://files.sunguoqi.com/images/202401022317704.webp"></div><br>吃完午餐后，我们便回到了宾馆休息。傍晚 17:30，我们将准时出发，奔向大海 🌊<div id="container-2" style="height:450px;border-radius:10px;margin:20px 0;"></div><!-- ![](https://files.sunguoqi.com/images/202401022321712.webp) --><p>大约晚上 19:00，我们成功抵达情侣路（吐槽一下香洲区的这段路，真的太坎坷啦😭）</p><p><img src="https://files.sunguoqi.com/images/202401022330642.webp"></p><p>在情侣路，你可以眺望远方的珠海大剧院（夜晚的日月贝不太好出片，容我放张旧图🫣）</p><img width="360px" src="https://files.sunguoqi.com/images/202401022330681.webp"><p>在香炉湾沙滩，和几位社牛小朋友们聊了会儿天后（小朋友们没有车，却对公路车甚是了解🫡），我们便去打卡了“珠海渔女”和“爱情邮局”。</p><img width="360px" src="https://files.sunguoqi.com/images/202401022335176.webp"><p>晚上 20:00 左右，我们在“三头牛”吃了顿火锅（火锅很好吃，好吃到以至于我们俩光顾着吃，都忘记拍照啦🤤）</p><img width="360px" src="https://files.sunguoqi.com/images/202401022336693.webp"><p>在归程途中，我们在“海天公园沙滩”稍作停歇（这里的视角真的太棒啦，电影感、氛围感拉满～）</p><img width="360px" src="https://files.sunguoqi.com/images/202401022339536.webp"><h2 id="2023-12-31"><a href="#2023-12-31" class="headerlink" title="2023.12.31"></a>2023.12.31</h2><p>早上 10:00，我们在“宝塘茶楼”吃了顿早茶，感受到了岭南满满的烟火气。</p><p><img src="https://files.sunguoqi.com/images/202401022341741.webp"></p><p>吃完早茶，我们便出发前往“圆明新园”（珠海圆明新园以北京圆明园为原稿，按 1:1 比例精选圆明园四十景中的十八景修建而成）</p><img width="360px" src="https://files.sunguoqi.com/images/202401022346412.webp"><p>大约下午 14:40，我们成功抵达了“观澳平台”（可惜雾太大，港珠澳大桥藏匿在了雾气之中）</p><p><img src="https://files.sunguoqi.com/images/202401022349820.webp"></p><p>15:30，我们在“木色咖啡馆”期待雾散（咖啡馆的装修很文艺，有幸品尝到誉哥亲自做的咖啡）</p><p><img width="360px" src="https://files.sunguoqi.com/images/202401030001752.webp"><br></p><p><img src="https://files.sunguoqi.com/images/202401022355472.webp"></p><p>大雾终究还是没有散去，于是我们决定亲自骑上人工岛，去看一看“港珠澳大桥”。</p><img width="360px" src="https://files.sunguoqi.com/images/202401030006060.webp"><div id="container-3" style="height:450px;border-radius:10px;margin:20px 0;"></div><!-- ![](https://files.sunguoqi.com/images/202401030003919.webp) --><p>晚上 21:30，我们在“漢陽廷”吃了顿自助烤肉，随后便前往中山留宿。</p><p><img src="https://files.sunguoqi.com/images/202401030020702.webp"></p><p>凌晨时分，我们终于抵达宾馆，窗外传来了阵阵鞭炮和欢呼声～</p><img width="360px" src="https://files.sunguoqi.com/images/202401030022598.webp"><h2 id="2024-01-01"><a href="#2024-01-01" class="headerlink" title="2024.01.01"></a>2024.01.01</h2><p>新年的第一天，约好了和 <a href="https://github.com/Simon-He95">Simon</a> 面基，所以我要稍早些赶回广州。</p><img width="500px" src="https://files.sunguoqi.com/images/202401030025532.webp"><p>此时，目的地距离我大约 90 km，早上七点出发的话，十二点之前完全可以赶到。</p><div id="container-4" style="height:450px;border-radius:10px;margin:20px 0;"></div><p>不过……既然要早起（其实我没睡），那为何不去看一场日出呢？</p><img width="500px" src="https://files.sunguoqi.com/images/202401030026978.webp"><p>中山有两个绝佳的地方可以赏日出，一个是“狮头山”，另一个便是“崖口海岸”，可……两个都不顺路。</p><p>虽然不顺路……即使不顺路，我还是会选择出发，于是……</p><div style="display:flex;justify-content:center;align-items:center;margin-bottom:30px !important">  <img width="360px" style="margin-right:50px !important" src="https://files.sunguoqi.com/images/202401030029536.webp"><br>  <img width="360px" src="https://files.sunguoqi.com/images/202401030030389.webp"><br></div><div style="display:flex;justify-content:center;align-items:center;margin-bottom:30px !important">  <img width="360px" style="margin-right:50px !important" src="https://files.sunguoqi.com/images/202401030029107.webp"><br>  <img width="360px" src="https://files.sunguoqi.com/images/202401030031771.webp"><br></div><p>从崖口出来，看了一下时间，八点零九分。此时，距离目的地刚好 100 km。</p><div id="container-5" style="height:450px;border-radius:10px;margin:20px 0;"></div><p>理论上，在不计休息和红灯的情况下，我只需要保持 25+ km/h 的均速，就能赶在十二点之前赴约。于是……</p><p><img src="https://files.sunguoqi.com/images/202401030033754.webp"></p><p>在一番极限输出之后，我妥协了（228 国道某段路的路况真的渣的要死）。</p><p>最终，我骑到了南沙，便叫了一辆货拉拉。</p><p><img src="https://files.sunguoqi.com/images/202401030035192.webp"></p><p>最后的最后，我成功在 12:30 左右见到了 Simon，我们开心地闲聊了些日常～</p><p><img src="https://files.sunguoqi.com/images/202401030037723.webp"></p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>元旦三天，骑行了 350+ 公里，这是一场远行，亦是一场修行。</p><p><img src="https://files.sunguoqi.com/images/202401030322419.webp"></p><p>感谢<a href="https://github.com/ddy-ddy">誉哥</a>的精心策划，使这场旅程丰富、珍贵、难忘～</p><img width="400px" src="https://files.sunguoqi.com/images/202401030912805.webp"><p>感谢勇敢的自己，可以随时随地、不顾一切的出发，去感受风，去聆听海，去触摸，去抵达～</p><img width="400px" src="https://files.sunguoqi.com/images/202401030938889.webp"><img style="margin:30px 0 !important" src="https://files.sunguoqi.com/images/202401031110675.webp"><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowheight="360" data-limit="20">    <span class="gallery-data">[{"url":"https://files.sunguoqi.com/images/202401031108003.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401030030223.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401030030385.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031113526.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031113191.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031113303.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031133806.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031132302.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031133699.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031132468.webp","alt":""},{"url":"https://files.sunguoqi.com/images/202401031324715.webp","alt":""}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><!-- 高德地图相关 --><script type="text/javascript">  window._AMapSecurityConfig = {      securityJsCode:'44cc78db94ea1ccd01771157086c4798',  }</script><script>  let AMap1 = null;  AMapLoader.load({    key: "d41a803d86bf0dce99bc5310fb0e4b01",    version: "2.0",    plugins: []  }).then((map) => {    AMap1 = map;    initMap1()  }).catch((e) => {    // 高德地图加载失败    console.error(e)  })  // 渲染地图到页面（要在服务器环境才能渲染成功）  function initMap1() {    let map1 = new AMap.Map('container-1', {      viewMode: "3D",      center: [113.516241,22.353661], // 地图中心点坐标      zoom: 15, // 地图缩放级别      mapStyle: "amap://styles/dark",    });    //创建一个 Marker 实例：    const marker1 = new AMap.Marker({      position: new AMap.LngLat(113.516241,22.353661), //经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]      title: "会同",    });    //将创建的点标记添加到已有的地图实例：    map1.add(marker1);    AMap1.plugin('AMap.ToolBar',function(){      var toolbar = new AMap.ToolBar();      map1.addControl(toolbar);    });}</script><script>  let AMap2 = null;  AMapLoader.load({    key: "d41a803d86bf0dce99bc5310fb0e4b01",    version: "2.0",    plugins: []  }).then((map) => {    AMap2 = map;    initMap2()  }).catch((e) => {    // 高德地图加载失败    console.error(e)  })  // 渲染地图到页面（要在服务器环境才能渲染成功）  function initMap2() {    let map2 = new AMap.Map('container-2', {      viewMode: "3D",      center: [113.549396,22.471637], // 地图中心点坐标      // zoom: , // 地图缩放级别      mapStyle: "amap://styles/dark",    });    AMap2.plugin('AMap.ToolBar',function(){      var toolbar = new AMap.ToolBar();      map2.addControl(toolbar);    });    const startLngLat = [113.501162,22.359149] //起始点坐标    const endLngLat = [113.581806,22.272413] //终点坐标    //引入和创建驾车规划插件    AMap2.plugin(["AMap.Riding"], function () {      const riding = new AMap.Riding({        map: map2,      });      //获取起终点规划线路      riding.search(startLngLat, endLngLat, function (status, result) {        if (status === "complete") {          //status：complete 表示查询成功，no_data 为查询无结果，error 代表查询错误          //查询成功时，result 即为对应的驾车导航信息          console.log(result);        } else {          console.log("获取骑行数据失败：" + result);        }      });    });}</script><script>  let AMap3 = null;  AMapLoader.load({    key: "d41a803d86bf0dce99bc5310fb0e4b01",    version: "2.0",    plugins: []  }).then((map) => {    AMap3 = map;    initMap3()  }).catch((e) => {    // 高德地图加载失败    console.error(e)  })  // 渲染地图到页面（要在服务器环境才能渲染成功）  function initMap3() {    let map3 = new AMap.Map('container-3', {      viewMode: "3D",      center: [113.581762,22.204369], // 地图中心点坐标      zoom: 13, // 地图缩放级别      mapStyle: "amap://styles/dark",    });    //创建一个 Marker 实例：    const marker = new AMap.Marker({      position: new AMap.LngLat(113.581762,22.204369), //经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]      title: "港珠澳",    });    //将创建的点标记添加到已有的地图实例：    map3.add(marker);    AMap3.plugin('AMap.ToolBar',function(){      var toolbar = new AMap.ToolBar();      map3.addControl(toolbar);    });}</script><script>  let AMap4 = null;  AMapLoader.load({    key: "d41a803d86bf0dce99bc5310fb0e4b01",    version: "2.0",    plugins: []  }).then((map) => {    AMap4 = map;    initMap4()  }).catch((e) => {    // 高德地图加载失败    console.error(e)  })  // 渲染地图到页面（要在服务器环境才能渲染成功）  function initMap4() {    let map4 = new AMap.Map('container-4', {      viewMode: "3D",      center: [113.418082,22.515766], // 地图中心点坐标      // zoom: , // 地图缩放级别      mapStyle: "amap://styles/dark",    });    AMap4.plugin('AMap.ToolBar',function(){      var toolbar = new AMap.ToolBar();      map4.addControl(toolbar);    });    const startLngLat = [113.418082,22.515766] //起始点坐标    const endLngLat = [113.279988,23.1392] //终点坐标    //引入和创建驾车规划插件    AMap4.plugin(["AMap.Riding"], function () {      const riding = new AMap.Riding({        map: map4,      });      //获取起终点规划线路      riding.search(startLngLat, endLngLat, function (status, result) {        if (status === "complete") {          //status：complete 表示查询成功，no_data 为查询无结果，error 代表查询错误          //查询成功时，result 即为对应的驾车导航信息          console.log(result);        } else {          console.log("获取骑行数据失败：" + result);        }      });    });}</script><script>  let AMap5 = null;  AMapLoader.load({    key: "d41a803d86bf0dce99bc5310fb0e4b01",    version: "2.0",    plugins: []  }).then((map) => {    AMap5 = map;    initMap5()  }).catch((e) => {    // 高德地图加载失败    console.error(e)  })  // 渲染地图到页面（要在服务器环境才能渲染成功）  function initMap5() {    let map5 = new AMap.Map('container-5', {      viewMode: "3D",      center: [113.549396,22.471637], // 地图中心点坐标      // zoom: , // 地图缩放级别      mapStyle: "amap://styles/dark",    });    AMap5.plugin('AMap.ToolBar',function(){      var toolbar = new AMap.ToolBar();      map5.addControl(toolbar);    });    const startLngLat = [113.549396,22.471637] //起始点坐标    const endLngLat = [113.279988,23.1392] //终点坐标    //引入和创建驾车规划插件    AMap5.plugin(["AMap.Riding"], function () {      const riding = new AMap.Riding({        map: map5,      });      //获取起终点规划线路      riding.search(startLngLat, endLngLat, function (status, result) {        if (status === "complete") {          //status：complete 表示查询成功，no_data 为查询无结果，error 代表查询错误          //查询成功时，result 即为对应的驾车导航信息          console.log(result);        } else {          console.log("获取骑行数据失败：" + result);        }      });    });}</script>]]></content>
      
      
      <categories>
          
          <category> 人间草木 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于个人独立博客，我的折腾和思考</title>
      <link href="/posts/9f4f8f84/"/>
      <url>/posts/9f4f8f84/</url>
      
        <content type="html"><![CDATA[<blockquote><p>I am a blogger，在生命的长河里，记录点滴成长，留下点 log。</p></blockquote><p>我刚开始接触编程的时候，写博客的欲望就非常强烈，总结下来，大概有以下几点原因。</p><ul><li>一入编程深似海，新学了一点东西，总想着记录下来。</li><li>好记性不如烂笔头，昨天学会的知识，过几天可能就忘了。博客==日志，它可以让我的“折腾”有迹可循。</li><li>网上查阅资料，看到别人写的文章。内心 OS：这写的什么玩意，换做是我，肯定写的比他好。</li></ul><h2 id="我的博客折腾史"><a href="#我的博客折腾史" class="headerlink" title="我的博客折腾史"></a>我的博客折腾史</h2><p>起初，我尝试在 CSDN 上写博客，收获了很多人的阅读和关注，成就感爆棚（CSDN 现已停更，后面准备更掘金）</p><img src="https://files.sunguoqi.com/images/202312091523941.webp"><img src="https://files.sunguoqi.com/images/202312091524346.webp"><img src="https://files.sunguoqi.com/images/202312091525477.webp"><img src="https://files.sunguoqi.com/images/202312091525448.webp"><p>后来，我开始折腾个人博客，零基础的我花了几天时间搭建了一个基于 Hexo + Github 的静态博客站点。</p><p>经过一番魔改，最终鼓捣成了下面这个样子<br>（仅作为备份留念，已弃用）。</p><p><a href="https://gh.sunguoqi.com/">https://gh.sunguoqi.com</a></p><img src="https://files.sunguoqi.com/images/202312091526623.webp"><img src="https://files.sunguoqi.com/images/202312091527369.webp"><p>考研备考期间，学业压力比较重，就没什么心思管理博客了。毕业后我打算重新来过。</p><p>静态博客框架既然已经折腾过一番了，那何尝不试试动态博客框架呢？</p><p>经过小段时间的探索，我最终选择了使用 Halo 框架。</p><p>Halo 框架官网：<a href="https://halo.run/">https://halo.run</a></p><img src="https://files.sunguoqi.com/images/202312091527843.webp"><p>Halo 的确很强大，而且免费、开源。在 GitHub 上收获了 29.6k 的 star（数据统计截至本文发表日期），推荐大家使用。</p><p><a href="https://github.com/halo-dev/halo">https://github.com/halo-dev/halo</a></p><img src="https://files.sunguoqi.com/images/202312110346954.webp"><p>不过…虽然…但是…emm…就在上个月，我又回归到了 Hexo 框架阵营。</p><p>Hexo 框架，安知鱼主题项目地址：</p><p><a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">https://github.com/anzhiyu-c/hexo-theme-anzhiyu</a></p><img src="https://files.sunguoqi.com/images/202312091528611.webp"><h2 id="写博客给我带来了什么"><a href="#写博客给我带来了什么" class="headerlink" title="写博客给我带来了什么"></a>写博客给我带来了什么</h2><h3 id="热情"><a href="#热情" class="headerlink" title="热情"></a>热情</h3><p>博客圈有一个非常反差的现象：</p><p>大佬们的站点往往非常简洁，内容含金量很高。而大部分的萌新则更执着于花大量的时间去折腾网站的功能、样式，博客内容往往参杂大量水分。</p><img src="https://files.sunguoqi.com/images/202312091541457.webp"><p>我认为这个现象很正常，我刚开始写博客的时候也是如此。</p><p>知识的产出并非片刻的爆发，而需要长期的积累。对网站非内容性部分的精心打磨，更能促使博主输出高质量的内容，“外在美”和“内在美”同样重要。</p><p>折腾是为了更好的产出。魔改网站，折腾功能，增加了我对技术的热情。</p><hr><h3 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h3><p>刚开始折腾博客的时候，我仅会参考官方文档和魔改教程。后来尝试加入了一些交流群，命运的齿轮开始转动…</p><p>当你遇到 Bug 时，你可以在群里寻求帮助，热心肠的大佬会帮助你解决问题。当你面对选择时，群友会给你提供一些建设性的建议。日常水群除了打发无聊的时间外，你还可以从中学习到一些新的东西，突破信息茧房（特指高质量群聊）。</p><p>曾经有段时间，“Akilar の 糖果屋”是我每天必水的群聊。在里面，我结交了很多朋友，认识了很多大佬。</p><p>店长的博客：<a href="https://akilar.top/">https://akilar.top</a></p><img src="https://files.sunguoqi.com/images/202312091542346.webp"><hr><h3 id="沉淀"><a href="#沉淀" class="headerlink" title="沉淀"></a>沉淀</h3><p>我上学的时候并没有记笔记的习惯，甚至非常讨厌记笔记，我感觉它在浪费我的时间，而且纸质笔记也不方便修改，不方便打磨内容，不方便排版等等（主要指高中时期，大学曾尝试、重度使用过一些电子笔记产品）。</p><p>但写博客则完全不同，你可以尽情的修改，反复打磨，美化排版等等（最主要的是可以不用嫌弃自己字丑了）。</p><p>当然，产出一篇真正有“内容”的文章并不容易，需要花费作者大量的时间和精力。但也正因如此，最终沉淀出来的东西才更有价值。</p><p>在枯燥乏味的工作中，遇到一些感兴趣的东西，想系统得整理下来。在随遇而安的生活里，萌生了一些感悟，想好好得记录下来。</p><p>梳理知识体系，记录所思所想。沉淀下来的东西，才是我们人生最宝贵的财富。</p><img src="https://files.sunguoqi.com/images/202312110226018.webp"><h2 id="博客内容方向思考"><a href="#博客内容方向思考" class="headerlink" title="博客内容方向思考"></a>博客内容方向思考</h2><p>写博客究竟要写什么，这是一个问题！</p><p>一开始我什么都想写，写自己新学到的知识，写自己的学习笔记，转发自己在别的地方看到的好文章，摘抄一些喜欢的句子、文案等等。</p><p>但这会带来一个很严重的问题，那就是：乱！！！</p><p>如何解决“乱”呢？那就是做减法。</p><p>重新搭建博客的时候我筛选了一些文章，只留下了大概十篇左右的内容。这十篇内容大多是生活随笔&amp;玩耍指南。</p><p>另外，我又新开了一个网站，用来记录我的学习笔记、技术理解和总结。</p><p><a href="https://brain.sunguoqi.com/">https://brain.sunguoqi.com</a></p><p>如此以来，我觉得优雅多了。</p><img src="https://files.sunguoqi.com/images/202312091544680.webp"><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>书写本文本是临时起意，当我看到…</p><img src="https://files.sunguoqi.com/images/202312110244707.webp"><p>在如今这个快节奏、碎片化的时代里，仍然有一群人能秉承着对科学技术的崇拜、怀揣着对美好生活的向往，保持着独立思考的能力，静静沉淀、悄悄改变、慢慢成长、默默奉献…</p><p>我是小孙同学，「中文独立博客」，欢迎各位博主交换友情链接～</p><p><a href="https://blog.sunguoqi.com/link/">https://blog.sunguoqi.com/link/</a></p><figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">小孙同学</span></span><br><span class="line"><span class="attr">link:</span> <span class="string">https://blog.sunguoqi.com</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">https://blog.sunguoqi.com/images/avatar.jpg</span></span><br><span class="line"><span class="attr">descr:</span> <span class="string">路虽远行则将至，事随难做则必成！</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>预告一波～，年底会有几篇长文更新，尽请期待。</p></blockquote><p>RSS 订阅地址：<a href="https://blog.sunguoqi.com/rss.xml">https://blog.sunguoqi.com/rss.xml</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oh My Posh | Windows Terminal 美化指南</title>
      <link href="/posts/3eb6a074/"/>
      <url>/posts/3eb6a074/</url>
      
        <content type="html"><![CDATA[<p>作为一名”爱码士”，那必然是爱屋及乌，简洁清爽的 IDE 主题，赏心悦目的代码配色，逼格拉满的 Terminal 终端，极致丝滑的码字体验，总是让人欲罢不能。</p><p>在 Windows 系统中，我们最常使用的 Shell 工具莫过于 PowerShell 了。虽然它真的很 Power，但纯天然的颜值还是稍显逊色，如何拥有更加 beautiful 的 PowerShell 呢？</p><img src="https://files.sunguoqi.com/images/202311250146674.webp"><h2 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h2><p>Windows Terminal 是一个集成了多个命令行环境的终端应用程序。</p><p>在 Windows Terminal 下，我们可以同时使用 PowerShell、命令提示符（Command Prompt）和 Windows Subsystem for Linux（WSL）等多种命令行工具。</p><p>安装 Windows Terminal 方法也比较简单，我们直接打开 Microsoft Store 下载安装即可。</p><img src="https://files.sunguoqi.com/images/202311250147264.webp"><p>Windows Terminal 提供了许多功能和特性，包括多标签页支持、自定义主题、快速启动、分屏布局、Unicode 字符支持、GPU 加速等。它还支持使用不同的配置文件来定义每个命令行环境的外观和行为。</p><p>PowerShell 美化第一步，我们可以直接在 Windows Terminal 中个性化修改它的外观。</p><img src="https://files.sunguoqi.com/images/202311250147174.webp"><h2 id="Oh-My-Posh"><a href="#Oh-My-Posh" class="headerlink" title="Oh My Posh"></a>Oh My Posh</h2><p>除了在 Windows Terminal 中个性化修改 PowerShell 的外观，我们还可以使用 <a href="https://ohmyposh.dev/">Oh My Posh</a>来进一步的美化 PowerShell。</p><img src="https://files.sunguoqi.com/images/202311250147163.webp"><h4 id="什么是-Oh-My-Posh"><a href="#什么是-Oh-My-Posh" class="headerlink" title="什么是 Oh My Posh"></a>什么是 Oh My Posh</h4><p>Oh My Posh 是一个开源的命令行提示工具，用于美化和定制命令行提示符（prompt）。</p><p>Oh My Posh 提供了丰富的主题和配置选项，可以让用户根据自己的喜好和需求来定制命令行提示符的外观和行为。它支持自定义图标、颜色、字体和布局等，使命令行提示符更具个性化和可读性。</p><p>使用 Oh My Posh，你可以在命令行提示符中显示有用的信息，如当前路径、Git 分支、Python 虚拟环境、操作系统信息等。它还提供了各种内置的模块和函数，可用于创建自定义的提示符元素和动态内容。</p><h4 id="安装-Oh-My-Posh"><a href="#安装-Oh-My-Posh" class="headerlink" title="安装 Oh My Posh"></a>安装 Oh My Posh</h4><p>安装 Oh My Posh 的方法有多种，在 Windows 中，你可以直接在 Microsoft Store 获取它。</p><img src="https://files.sunguoqi.com/images/202311250148937.webp"><h4 id="使用-Oh-My-Posh"><a href="#使用-Oh-My-Posh" class="headerlink" title="使用 Oh My Posh"></a>使用 Oh My Posh</h4><p>Oh My Posh 安装成功后，Windows Terminal 并不会默认使用 Oh My Posh 来加载 PowerShell。还需要我们进行以下配置。</p><p>在命令行中输入<code>$profile</code> 查看 powerShell 的配置文件路径。在该目录下新建<code>Microsoft.PowerShell_profile.ps1</code>文件，填入以下内容即可。</p><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">oh-my-posh init pwsh | Invoke-Expression</span><br></pre></td></tr></tbody></table></figure><h4 id="安装-Nerd-Fonts"><a href="#安装-Nerd-Fonts" class="headerlink" title="安装 Nerd Fonts"></a>安装 Nerd Fonts</h4><p>Oh<br>My Posh 配置成功后，我们重新打开 Windows Terminal 会发现输入提示出现了乱码。</p><p>这是因为我们目前终端正在使用的字体不支持图标导致的。我们需要安装 Nerd Fonts 字体。</p><p>打开 <a href="https://www.nerdfonts.com/font-downloads">Nerd Fonts</a> 字体的下载地址，选择我们自己喜欢的字体下载安装即可，这里我选择的字体是<code>Hack Nerd Font</code></p><img src="https://files.sunguoqi.com/images/202311250148284.webp"><h4 id="使用-Nerd-Fonts"><a href="#使用-Nerd-Fonts" class="headerlink" title="使用 Nerd Fonts"></a>使用 Nerd Fonts</h4><p>Nerd 字体安装成功后，我们需要把终端的使用字体配置为我们下载的 Nerd 字体。</p><p>打开 Windows Terminal，使用快捷键 <code>Ctrl+Shift+,</code> 打开 Windows Terminal 的配置文件。</p><p>在 profiles 中加入以下内容即可。</p><figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">"defaults"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line"><span class="attr">"font"</span><span class="punctuation">:</span> <span class="punctuation">{</span>  </span><br><span class="line"><span class="attr">"face"</span><span class="punctuation">:</span> <span class="string">"Hack Nerd Font"</span>  </span><br><span class="line"><span class="punctuation">}</span>  </span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><ul><li>“face” 对应的键值为你在 Nerd 中下载的字体名称，如 “Hack Nerd Font” </li><li>如果你曾经在 Windows Terminal 单独给 PowerShell 设置过字体，你可以将 PowerShell 的字体配置注释掉或直接修改 PowerShell 的字体配置。</li></ul><blockquote><p>当然你也可以在 Windows Terminal 的图形界面中修改默认字体及 Powershell 的使用字体。</p></blockquote><img src="https://files.sunguoqi.com/images/202311250148578.webp"><p>配置好字体后重新打开终端，就可以看到我们美化后的效果啦。</p><img src="https://files.sunguoqi.com/images/202311250148611.webp"><h4 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h4><p>Oh My Posh 官方提供了许多开箱即用的主题供我们选择。</p><p>访问下面的链接即可查看主题预览效果。</p><p><a href="https://ohmyposh.dev/docs/themes">https://ohmyposh.dev/docs/themes</a></p><img src="https://files.sunguoqi.com/images/202311250149788.webp"><h4 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h4><p>在命令行中输入<code>Get-PoshThemes</code> ，在输出内容的最下面可以查看主题预设文件的路径。</p><p>在命令行中输入<code>notepad $profile</code> 命令打开 PowerShell 的配置文件，在配置文件中加入主题预设文件路径即可。格式为：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">oh-my-posh init pwsh --config <span class="string">'C:/Users/Posh/jandedobbeleer.omp.json'</span> | Invoke-Expression</span><br></pre></td></tr></tbody></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><ul><li>在 VSCode 中同样需要配置 Terminal 的字体为 Nerd 字体才可以正常显示图标</li><li>在 Windows 中使用 neofetch 命令的教程：<a href="https://www.makeuseof.com/how-to-install-and-use-neofetch-on-windows/">点我查看</a></li></ul><img src="https://files.sunguoqi.com/images/202311250149384.webp"><img src="https://files.sunguoqi.com/images/202311250149895.webp">]]></content>
      
      
      <categories>
          
          <category> 实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 美化 </tag>
            
            <tag> 终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小孙同学 の 第二大脑正在施工中。。。</title>
      <link href="/posts/e7213992/"/>
      <url>/posts/e7213992/</url>
      
        <content type="html"><![CDATA[<p>搬砖摸鱼逛 Github 时，无意间发现了此仓库。</p><p><a href="https://github.com/WindrunnerMax/EveryDay">https://github.com/WindrunnerMax/EveryDay</a></p><p><img src="https://files.sunguoqi.com/images/202311250059760.webp"></p><p>该仓库记录了博主从 <code>2020.02.25</code> 至今的学习历程，在对博主深感敬佩的同时，其 <code>Readme.md</code> 中有这样一句话，让我深有感触。</p><blockquote><p>如果只学习而不记录点什么那基本就等于白学了</p></blockquote><p>我将该句话换了一种方式进行表达。</p><blockquote><p>任何没有经过自己大脑处理过的知识永远都不可能真正属于你</p></blockquote><p>学习是人的天性。</p><p>我们每个人，每天都在进行着大量的学习行为。（请注意，不要把这里的“学习”狭隘的理解为在学校里上课。）</p><p>无论是被动的、主动的还是无意识的学习，当我们对其进行一定的抽象后，你会发现它们都遵循一个最简单的逻辑。</p><p><img src="https://files.sunguoqi.com/images/202311250100850.webp"></p><p>在信息时代，我们每天都会接收到无比庞大的信息，但究竟哪些信息真正内化成了我们自己的知识呢？</p><p>我觉得我们应该好好梳理一下。。。</p><h2 id="构建自己的第二大脑"><a href="#构建自己的第二大脑" class="headerlink" title="构建自己的第二大脑"></a>构建自己的第二大脑</h2><p>“第二大脑”又称之为“数字大脑”或“外脑” ，它是一种数字化的信息载体。</p><p>你可以将其理解为是一套知识管理系统的实体，那什么是知识管理系统呢？</p><p><a href="https://mp.weixin.qq.com/s/z05Ec23oN2BwYxT-eb8G0Q">https://mp.weixin.qq.com/s/z05Ec23oN2BwYxT-eb8G0Q</a></p><p>这里给大家推荐一篇文章，该文章按照黄金圈法则，详尽阐述了</p><ul><li>What：什么是知识管理系统？</li><li>Why：为什么要构建一套知识管理系统？</li><li>How：如何构建我们的知识管理系统？</li></ul><img width="360" src="https://files.sunguoqi.com/images/202311250109543.webp"><h2 id="在人工智能时代谋生存"><a href="#在人工智能时代谋生存" class="headerlink" title="在人工智能时代谋生存"></a>在人工智能时代谋生存</h2><p>近期，随着 chatGPT 的爆火，人工智能再次引起人们的广泛关注。</p><p>人工智能会取代人类嘛？</p><p><img src="https://files.sunguoqi.com/images/202311250112211.webp"></p><p>和人类学习行为类似，机器学习也同样遵循<code>输入信息</code>——<code>处理信息</code>——<code>输出信息</code>这套最简单的逻辑</p><p>但和人类不同的是，计算机可以存储海量的信息，而人类永远无法做到这一点。</p><p>我们不禁好奇，计算机是如何存储以及管理海量信息的？</p><p>抛开机器的物理属性，我们从逻辑层面来思考这个问题。</p><p>学过《数据结构》这门课程的同学肯定会对下面这张图比较熟悉。</p><img width="200" src="https://files.sunguoqi.com/images/202311250101788.webp"><p>是的，这是常规链表中的一个结点。</p><p>值得大家注意的是，该结点不仅包含一个数据域，还包含一个指针域。</p><p>因为数据往往并不是孤立存在的。</p><p>如果我们以线性的方式将数据组织起来，它会变成下面这个样子。</p><p><img src="https://files.sunguoqi.com/images/202311250102444.webp"></p><p>在现实生活中，当我们遇到一个非常复杂的问题时，我们通常会将其拆分成若干个子问题进行分析。</p><p>数据也是如此，它应该具备相应的层级。</p><p><img src="https://files.sunguoqi.com/images/202311250109107.webp"></p><p>虽然我们对问题进行了拆分，但其子问题也很可能相互关联，所以在层级的基础上，我们还应保障子问题的关联性。</p><img width="500" src="https://files.sunguoqi.com/images/202311250113437.webp"><p>将海量信息关联在一起，看似无序，实则有序，计算机对信息管理的方式远远超过人类。</p><p>在存储信息这一层面，人类永远无法战胜机器，但或许我们根本没必要战胜。</p><p>我们应该清楚的认识到，人脑擅长的是思考和建立连接，而并非存储。</p><p>我们的大脑更像是一个 CPU，而非硬盘。而“第二大脑”的存在就像是给人脑外接了一个硬盘。</p><p>在大数据与人工智能时代，在人脑和人工智能较量的时代，或许还存在一个中间态，那就是<code>人脑+第二大脑</code></p><h2 id="小孙同学-の-第二大脑"><a href="#小孙同学-の-第二大脑" class="headerlink" title="小孙同学 の 第二大脑"></a>小孙同学 の 第二大脑</h2><p>站点：<a href="https://brain.sunguoqi.com/">https://brain.sunguoqi.com/</a></p><p>源码：<a href="https://github.com/sun0225SUN/Brain">https://github.com/sun0225SUN/Brain</a></p><p><img src="https://files.sunguoqi.com/images/202311250103611.webp"></p><p><code>2023.03.24</code>，我搭建了该网站，日后，它会不断更新我的所学及产出。</p><p>从无序到有序，从碎片化到结构化，从输入到输出，当知识完整的经过了你的大脑，那我想他会永远属于你！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 外脑 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奔跑在自己的时区里，你好哇，我的 22 岁！</title>
      <link href="/posts/abe837db/"/>
      <url>/posts/abe837db/</url>
      
        <content type="html"><![CDATA[<div style="text-align: center; text-indent: 0"><h2>再见，校园</h2>  <p>23 考研尘埃落定，有人积极准备复试，有人匆忙投放简历。</p>  <p>在这个阶段，似乎每个人都略显恐慌。但面对未来的不确定性，我们好像又无能为力。</p>  <p>于我而言，我决定离开校园，去直面未来的不确定。</p><h2> 你好，"蔚来" </h2>  <p>非科班，本科在读，没有经历被八股文、算法的折磨，我便来到了"蔚来"。</p>  <p>这听起来简直不可思议，但命运的确将我带到了这里。</p>  <p>其间当然有贵人相助，但于我而言，我将其归结为"运气"。</p><h2> 与蔚来同行，一起向未来！</h2>  <p>在蔚来工作了一周，我确信，这是我想要的未来。</p>  <img width="600px" src="https://files.sunguoqi.com/images/202311250039201.webp">  <img width="600px" src="https://files.sunguoqi.com/images/202311250040895.webp"><h2> 22 岁，生日快乐</h2>  <p>22 岁，我将满怀热情，全心全意投入到我所热爱的事业中。去打磨性格，去沉淀技术，去创造价值！</p></div><img width="800px" src="https://files.sunguoqi.com/images/202311250041321.webp"><blockquote style="text-align: center; text-indent: 0"><p><strong>纽约时间比加州时间早三个小时，</strong></p><p><i>New York is 3 hours ahead of California,</i></p><p><strong>但加州时间并没有变慢。</strong></p><p><i>but it does not make California slow.</i></p><p><strong>有人 22 岁就毕业了，</strong></p><p><i>Someone graduated at the age of 22,</i></p><p><strong>但等了五年才找到好的工作！</strong></p><p><i>but waited 5 years before securing a good job!</i></p><p><strong>有人 25 岁就当上 CEO，</strong></p><p><i>Someone became a CEO at 25,</i></p><p><strong>却在 50 岁去世。</strong></p><p><i>and died at 50.</i></p><p><strong>也有人迟到 50 岁才当上 CEO，</strong></p><p><i>While another became a CEO at 50,</i></p><p><strong>然后活到 90 岁。</strong></p><p><i>and lived to 90 years.</i></p><p><strong>有人依然单身，</strong></p><p><i>Someone is still single,</i></p><p><strong>同时也有人已婚。</strong></p><p><i>while someone else got married.</i></p><p><strong>奥巴马 55 岁就退休，</strong></p><p><i>Obama retires at 55,</i></p><p><strong>川普 70 岁才开始当总统。</strong></p><p><i>but Trump starts at 70.</i></p><p><strong>世上每个人本来就有自己的发展时区。</strong></p><p><i>Absolutely everyone in this world works based on their Time Zone.</i></p><p><strong>身边有些人看似走在你前面，</strong></p><p><i>People around you might seem to go ahead of you,</i></p><p><strong>也有人看似走在你后面。</strong></p><p><i>some might seem to be behind you</i></p><p><strong>但其实每个人在自己的时区有自己的步程。</strong></p><p><i>But everyone is running their own RACE, in their own TIME.</i></p><p><strong>不用嫉妒或嘲笑他们。</strong></p><p><i>Don’t envy them or mock them.</i></p><p><strong>他们都在自己的时区里，你也是！</strong></p><p><i>They are in their TIME ZONE, and you are in yours!</i></p><p><strong>生命就是等待正确的行动时机。</strong></p><p><i>Life is about waiting for the right moment to act.</i></p><p><strong>所以，放轻松。</strong></p><p><i>So, RELAX.</i></p><p><strong>你没有落后。</strong></p><p><i>You’re not LATE.</i></p><p><strong>你没有领先。</strong></p><p><i>You’re not EARLY.</i></p><p><strong>在命运为你安排的属于自己的时区里，一切都准时。</strong></p><p><i>You are very much ON TIME, and in your TIME ZONE Destiny set up for you.</i></p></blockquote><h2 id="去年此时"><a href="#去年此时" class="headerlink" title="去年此时"></a>去年此时</h2><details class="folding-tag" blue=""><summary> 21 岁 </summary>              <div class="content">              <p><img src="https://files.sunguoqi.com/images/202311250003483.webp"></p>              </div>            </details><details class="folding-tag" blue=""><summary> 20 岁 </summary>              <div class="content">              <p><img src="https://files.sunguoqi.com/images/202311250002786.webp"></p>              </div>            </details><details class="folding-tag" blue=""><summary> 19 岁 </summary>              <div class="content">              <p><img src="https://files.sunguoqi.com/images/202311250002184.webp"></p>              </div>            </details><details class="folding-tag" blue=""><summary> 18 岁 </summary>              <div class="content">              <p><img src="https://files.sunguoqi.com/images/202311250002606.webp"></p>              </div>            </details><details class="folding-tag" blue=""><summary> 17 岁 </summary>              <div class="content">              <p><img src="https://files.sunguoqi.com/images/202311250002861.webp"></p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 生日快乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 感悟 </tag>
            
            <tag> 生日 </tag>
            
            <tag> 22 岁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让面试官眼前一亮，手把手带你打造个性化的 GitHub 首页</title>
      <link href="/posts/f3b61b38/"/>
      <url>/posts/f3b61b38/</url>
      
        <content type="html"><![CDATA[<blockquote><p>代码可以不会敲，但是逼格一定要高。</p></blockquote><p>不知从何时起，我发现自己<strong>花里胡哨</strong>的本领是越来越强了。</p><p>看看俺滴主页 <a href="https://sunguoqi.com/">https://sunguoqi.com</a></p><img src="https://files.sunguoqi.com/images/202311250153497.webp"><p>看看俺滴博客 <a href="https://blog.sunguoqi.com/">https://blog.sunguoqi.com</a></p><img src="https://files.sunguoqi.com/images/202311250154365.webp"><p>再看看俺滴相册 <a href="https://plog.sunguoqi.com/">https://plog.sunguoqi.com</a></p><img src="https://files.sunguoqi.com/images/202311250154965.webp"><p>哇呜~ 好好看喔，审美在线，哈哈哈。</p><h2 id="步入正题"><a href="#步入正题" class="headerlink" title="步入正题"></a>步入正题</h2><p>先看一下我的 GitHub 首页吧。</p><p><a href="https://github.com/sun0225SUN">https://github.com/sun0225SUN</a></p><p>怎么样，我想这可能是全 GitHub 加载最慢的首页了吧🐶。</p><p>哈哈哈，想拥有吗，想拥有的话就继续往下看吧。</p><h2 id="如何实现"><a href="#如何实现" class="headerlink" title="如何实现"></a>如何实现</h2><p>其实自定义 Github 的首页很简单，我们只需要新建一个<strong>仓库名</strong>和自己 Github <strong>用户 ID</strong> 相同的仓库并且添加一个 <code>README.md</code>自述文件即可。</p><p>理论存在，实践开始</p><p>新建一个同名仓库，添加一个自述文件后点击确认。</p><img src="https://files.sunguoqi.com/images/202311250154073.webp"><p>GitHub 默认为此文件添加了 demo，我们编辑此文件，即可开启自己的 DIY 之路了！</p><img src="https://files.sunguoqi.com/images/202311250155216.webp"><h2 id="酷炫一点"><a href="#酷炫一点" class="headerlink" title="酷炫一点"></a>酷炫一点</h2><p>Github 提供了这样一个特殊的 <code>markdown</code> 文件以供我们 DIY GitHub 首页。</p><p>但是，个人的创造力毕竟有限，如何能在短时间内拥有一个非常酷炫的首页呢！</p><p>emmm，有了，<code>ctrl+c</code> <code>ctrl+v</code>。</p><h3 id="Typing-svg"><a href="#Typing-svg" class="headerlink" title="Typing svg"></a>Typing svg</h3><p align="center">    <img src="https://readme-typing-svg.herokuapp.com/?lines=console.log(%22Hello%2C%20World!%22);小孙同学祝您今天愉快!&amp;center=true&amp;size=27"></p><p>开源项目地址：<a href="https://github.com/DenverCoder1/readme-typing-svg">https://github.com/DenverCoder1/readme-typing-svg</a></p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中展示一个循环打字的<code>svg</code>小动画。</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://sunguoqi.com/"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://readme-typing-svg.herokuapp.com/?lines=console.log(%22Hello%2C%20World!%22);小孙同学祝您今天愉快!&amp;center=true&amp;size=27"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Shields-io"><a href="#Shields-io" class="headerlink" title="Shields.io"></a>Shields.io</h3><p align="center"><span><img src="https://img.shields.io/badge/-HTML5-E34F26?style=flat-square&amp;logo=html5&amp;logoColor=white"><img src="https://img.shields.io/badge/-CSS3-1572B6?style=flat-square&amp;logo=css3"><img src="https://img.shields.io/badge/-JavaScript-oringe?style=flat-square&amp;logo=javascript"></span></p><p>开源项目地址：<a href="https://github.com/badges/shields">https://github.com/badges/shields</a></p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中展示您所需要的徽章图标。</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"https://img.shields.io/badge/-HTML5-E34F26?style=flat-square&amp;logo=html5&amp;logoColor=white"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"https://img.shields.io/badge/-CSS3-1572B6?style=flat-square&amp;logo=css3"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"https://img.shields.io/badge/-JavaScript-oringe?style=flat-square&amp;logo=javascript"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">![](https://img.shields.io/badge/-HTML5-E34F26?style=flat-square&amp;logo=html5&amp;logoColor=white)</span><br><span class="line">![](https://img.shields.io/badge/-CSS3-1572B6?style=flat-square&amp;logo=css3)</span><br><span class="line">![](https://img.shields.io/badge/-JavaScript-oringe?style=flat-square&amp;logo=javascript)</span><br></pre></td></tr></tbody></table></figure><h3 id="Visitor-Badge"><a href="#Visitor-Badge" class="headerlink" title="Visitor Badge"></a>Visitor Badge</h3><!-- <div align="center"><img  src="https://visitor-badge.glitch.me/badge?page_id=sun0225SUN" /></div> --><p>开源项目地址：<a href="https://github.com/jwenjian/visitor-badge">https://github.com/jwenjian/visitor-badge</a></p><p>这个图标和上面的徽章类似，但作用不同，这个徽标会实时改变，记录此页面被访问的次数。（注意修改 ID）</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"https://visitor-badge.glitch.me/badge?page_id=sun0225SUN"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">![](https://visitor-badge.glitch.me/badge?page_id=sun0225SUN)</span><br></pre></td></tr></tbody></table></figure><h3 id="Spotify"><a href="#Spotify" class="headerlink" title="Spotify"></a>Spotify</h3><!-- <img src="https://spotify-github-profile.vercel.app/api/view?uid=31k53kp6hgkbovg72427dya5av44&cover_image=true&theme=default&show_offline=false&background_color=121212" /> --><p>开源项目地址：<a href="https://github.com/kittinan/spotify-github-profile">https://github.com/kittinan/spotify-github-profile</a></p><p>参考项目说明，复制如下代码（仅供参考），便可以在 GitHub 首页中展示您最近在<code>spotify</code>中所听过的音乐。</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://spotify-github-profile.vercel.app/api/view?uid=31k53kp6hgkbovg72427dya5av44&amp;cover_image=true&amp;theme=default&amp;show_offline=false&amp;background_color=121212"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Joke"><a href="#Joke" class="headerlink" title="Joke"></a>Joke</h3><img src="https://readme-jokes.vercel.app/api?hideBorder&amp;bgColor=%23121212" alt="Jokes Card"><p>开源项目地址：<a href="https://github.com/ABSphreak/readme-jokes">https://github.com/ABSphreak/readme-jokes</a></p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中展示一些关于 IT 行业的笑话。</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://readme-jokes.vercel.app/api?hideBorder&amp;bgColor=%23121212"</span> <span class="attr">alt</span>=<span class="string">"Jokes Card"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="GitHub-streak"><a href="#GitHub-streak" class="headerlink" title="GitHub streak"></a>GitHub streak</h3><div align="center"><img src="https://github-readme-streak-stats.herokuapp.com/?user=sun0225SUN&amp;theme=dark&amp;hide_border=true"></div><p>开源项目地址：<a href="https://github.com/DenverCoder1/github-readme-streak-stats">https://github.com/DenverCoder1/github-readme-streak-stats</a></p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中展示您连续提交代码的天数及贡献总数。（注意修改 ID）</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"https://github-readme-streak-stats.herokuapp.com/?user=sun0225SUN&amp;theme=dark&amp;hide_border=true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[![GitHub Streak](https://github-readme-streak-stats.herokuapp.com/?user=sun0225SUN&amp;theme=dark&amp;hide_border=true)](https://git.io/streak-stats)</span><br></pre></td></tr></tbody></table></figure><h3 id="Metrics"><a href="#Metrics" class="headerlink" title="Metrics"></a>Metrics</h3><div align="center"><img src="https://metrics.lecoq.io/sun0225SUN?template=classic&amp;config.timezone=Asia%2FShanghai"></div><p>工具网站：<a href="https://metrics.lecoq.io/">https://metrics.lecoq.io/</a></p><p>在浏览器中打开上方链接，在左侧选择您要展示的内容，复制右边的<code>Maekdown</code>代码即可。</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://metrics.lecoq.io/sun0225SUN?template=classic&amp;config.timezone=Asia%2FShanghai"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">![Metrics](https://metrics.lecoq.io/sun0225SUN?template=classic&amp;config.timezone=Asia%2FShanghai)</span><br></pre></td></tr></tbody></table></figure><h3 id="Quotes"><a href="#Quotes" class="headerlink" title="Quotes"></a>Quotes</h3><img src="https://quotes-github-readme.vercel.app/api?type=horizontal&amp;theme=dark"><p>开源项目地址：<a href="https://github.com/shravan20/github-readme-quotes">https://github.com/shravan20/github-readme-quotes</a></p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中随机展示一段名人名言。</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://quotes-github-readme.vercel.app/api?type=horizontal&amp;theme=dark"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Github-Profile-Trophy"><a href="#Github-Profile-Trophy" class="headerlink" title="Github Profile Trophy"></a>Github Profile Trophy</h3><div align="center"><img src="https://github-profile-trophy.vercel.app/?username=sun0225SUN&amp;theme=gruvbox&amp;row=1&amp;column=7&amp;no-frame=true&amp;no-bg=true"></div><p>开源项目地址：<a href="https://github.com/ryo-ma/github-profile-trophy">https://github.com/ryo-ma/github-profile-trophy</a></p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中展示您的奖杯成就（注意修改 ID）</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"https://github-profile-trophy.vercel.app/?username=sun0225SUN&amp;theme=gruvbox&amp;row=1&amp;column=7&amp;no-frame=true&amp;no-bg=true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[![trophy](https://github-profile-trophy.vercel.app/?username=sun0225SUN)](https://github.com/ryo-ma/github-profile-trophy)</span><br></pre></td></tr></tbody></table></figure><h3 id="GitHub-统计卡片"><a href="#GitHub-统计卡片" class="headerlink" title="GitHub 统计卡片"></a>GitHub 统计卡片</h3><div align="center"><img src="https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api/top-langs/?username=sun0225SUN&amp;hide_title=true&amp;hide_border=true&amp;layout=compact&amp;langs_count=6&amp;text_color=000&amp;icon_color=fff&amp;bg_color=0,52fa5a,4dfcff,c64dff&amp;theme=graywhite"></div><div align="center"><img height="137px" src="https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api?username=sun0225SUN&amp;hide_title=true&amp;hide_border=true&amp;show_icons=trueline_height=21&amp;text_color=000&amp;icon_color=000&amp;bg_color=0,ea6161,ffc64d,fffc4d,52fa5a&amp;theme=graywhite"></div><p> <br>开源项目地址：<a href="https://github.com/anuraghazra/github-readme-stats">https://github.com/anuraghazra/github-readme-stats</a> </p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中展示您的编码数据统计图（注意修改 ID）</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api/top-langs/?username=sun0225SUN&amp;hide_title=true&amp;hide_border=true&amp;layout=compact&amp;langs_count=6&amp;text_color=000&amp;icon_color=fff&amp;bg_color=0,52fa5a,4dfcff,c64dff&amp;theme=graywhite"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">height</span>=<span class="string">"137px"</span> <span class="attr">src</span>=<span class="string">"https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api?username=sun0225SUN&amp;hide_title=true&amp;hide_border=true&amp;show_icons=trueline_height=21&amp;text_color=000&amp;icon_color=000&amp;bg_color=0,ea6161,ffc64d,fffc4d,52fa5a&amp;theme=graywhite"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">![这里写你的昵称's Most used languages](https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api/top-langs/?username=这里替换成你的 GitHub ID&amp;layout=compact&amp;hide_border=true&amp;langs_count=10)</span><br><span class="line"></span><br><span class="line">[![这里写你的昵称's GitHub stats](https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api?username=这里替换成你的 GitHub ID)](https://github.com/anuraghazra/github-readme-stats)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="GitHub-Readme-Activity-Graph"><a href="#GitHub-Readme-Activity-Graph" class="headerlink" title="GitHub Readme Activity Graph"></a>GitHub Readme Activity Graph</h3><div align="center"><img src="https://github-readme-activity-graph.vercel.app/graph?username=sun0225SUN&amp;theme=xcode"></div><p>开源项目地址：<a href="https://github.com/Ashutosh00710/github-readme-activity-graph">https://github.com/Ashutosh00710/github-readme-activity-graph</a></p><p>参考项目说明，复制如下代码，便可以在 GitHub 首页中展示 GitHub 活动统计图（注意修改 ID）</p><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://activity-graph.herokuapp.com/graph?username=sun0225SUN&amp;theme=xcode"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[![Sunshine's GitHub Activity Graph](https://activity-graph.herokuapp.com/graph?username=sun0225SUN&amp;theme=xcode)](https://github.com/sun0225SUN)</span><br></pre></td></tr></tbody></table></figure><h1 id="案例仓库"><a href="#案例仓库" class="headerlink" title="案例仓库"></a>案例仓库</h1><p>好的创意总是能博得人的关注，吸引人的眼球。</p><p>当我们在逛 GitHub 时，如果遇到了好看的主页，我们便可以直接把他扒下来，为我所用。</p><p>下面几个仓库收集了一些好看的 GitHub 主页，仅供大家欣赏和参考。</p><p>开源地址：<a href="https://github.com/EddieHubCommunity/awesome-github-profiles">https://github.com/EddieHubCommunity/awesome-github-profiles</a></p><img src="https://files.sunguoqi.com/images/202311250155404.webp"><p>开源地址：<a href="https://github.com/abhisheknaiidu/awesome-github-profile-readme">https://github.com/abhisheknaiidu/awesome-github-profile-readme</a></p><img src="https://files.sunguoqi.com/images/202311250156832.webp"><p>开源地址：<a href="https://github.com/eryajf/awesome-github-profile-readme-chinese">https://github.com/eryajf/awesome-github-profile-readme-chinese</a></p><img src="https://files.sunguoqi.com/images/202311250156830.webp"><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>细心的读者可能会发现，在我的 GitHub 首页中，除了今天所介绍的一些内容之外，还包含一些其他元素。比如贪吃蛇贡献图动画，3D 热力图等。</p><p>这些东西需要借助<code>Github Actions</code>实现，我将在后续的教程中阐述他具体的操作方法和工作原理。</p>]]></content>
      
      
      <categories>
          
          <category> 实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热门 </tag>
            
            <tag> 教程 </tag>
            
            <tag> GitHub </tag>
            
            <tag> 美化 </tag>
            
            <tag> 精选 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速上手，教你如何将 ChatGPT 接入到微信公众号</title>
      <link href="/posts/e78a2007/"/>
      <url>/posts/e78a2007/</url>
      
        <content type="html"><![CDATA[<h2 id="成果演示"><a href="#成果演示" class="headerlink" title="成果演示"></a>成果演示</h2><h3 id="基础问答"><a href="#基础问答" class="headerlink" title="基础问答"></a>基础问答</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250121850.webp">              </div>            </details><h3 id="代码解读"><a href="#代码解读" class="headerlink" title="代码解读"></a>代码解读</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250122187.webp">              </div>            </details><h3 id="代码转换"><a href="#代码转换" class="headerlink" title="代码转换"></a>代码转换</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250122303.webp">              </div>            </details><h3 id="错误修正"><a href="#错误修正" class="headerlink" title="错误修正"></a>错误修正</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250122231.webp">              </div>            </details><h3 id="情感分析"><a href="#情感分析" class="headerlink" title="情感分析"></a>情感分析</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250123269.webp">              </div>            </details><h3 id="项目分类"><a href="#项目分类" class="headerlink" title="项目分类"></a>项目分类</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250123372.webp">              </div>            </details><h3 id="名字生成器"><a href="#名字生成器" class="headerlink" title="名字生成器"></a>名字生成器</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250123039.webp">              </div>            </details><h3 id="时间复杂度计算"><a href="#时间复杂度计算" class="headerlink" title="时间复杂度计算"></a>时间复杂度计算</h3><details class="folding-tag"><summary> 查看详情 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250124645.webp">              </div>            </details><h2 id="友情提示"><a href="#友情提示" class="headerlink" title="友情提示"></a>友情提示</h2><p>本教程假定您已经拥有以下资源</p><ul><li>一个微信公众号</li><li>一个 OpenAI 账号</li><li>一台可访问外网的服务器</li><li>一个域名 (最好有，没有也可以)</li></ul><p>您最好已经掌握以下技能</p><ul><li>Python 编程基础</li><li>一定的 Web 开发及服务端运维经验</li></ul><h2 id="OpenAI-API"><a href="#OpenAI-API" class="headerlink" title="OpenAI API"></a>OpenAI API</h2><p>在本节，您将学会如何使用 Python 来调用 OpenAI API。</p><h3 id="新建一个-Python-项目"><a href="#新建一个-Python-项目" class="headerlink" title="新建一个 Python 项目"></a>新建一个 Python 项目</h3><p>使用 PyCharm 或其他集成开发环境创建一个 Python 项目。</p><img src="https://files.sunguoqi.com/images/202311250132445.webp"><h3 id="新建一个-API-key"><a href="#新建一个-API-key" class="headerlink" title="新建一个 API key"></a>新建一个 API key</h3><p><a href="https://beta.openai.com/account/api-keys">Account API Keys - OpenAI API</a></p><p>点击上方链接创建一个密钥，保存此密钥以便后续使用。</p><img src="https://files.sunguoqi.com/images/202311250133137.webp"><h3 id="安装-openai-依赖"><a href="#安装-openai-依赖" class="headerlink" title="安装 openai 依赖"></a>安装 openai 依赖</h3><p>在 Pycharm 中打开本地终端并输入以下命令安装 openai 依赖包。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">pip install openai</span><br></pre></td></tr></tbody></table></figure><h4 id="安装失败"><a href="#安装失败" class="headerlink" title="安装失败"></a>安装失败</h4><p>请确保您的电脑可以正常访问境外网络，否则可能会安装失败。</p><img src="https://files.sunguoqi.com/images/202311250133200.webp"><h4 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h4><img src="https://files.sunguoqi.com/images/202311250133044.webp"><p>在终端中输入以下命令查看<strong>openai</strong>依赖包是否已经安装成功。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></tbody></table></figure><p>终端输出如下（示例）。</p><figure class="highlight txt"><table><tbody><tr><td class="code"><pre><span class="line">aiohttp            3.8.3</span><br><span class="line">aiosignal          1.3.1</span><br><span class="line">async-timeout      4.0.2</span><br><span class="line">attrs              22.2.0</span><br><span class="line">certifi            2022.12.7</span><br><span class="line">charset-normalizer 2.1.1</span><br><span class="line">colorama           0.4.6</span><br><span class="line">frozenlist         1.3.3</span><br><span class="line">idna               3.4</span><br><span class="line">multidict          6.0.4</span><br><span class="line">openai             0.26.4</span><br><span class="line">pip                22.3.1</span><br><span class="line">requests           2.28.2</span><br><span class="line">setuptools         65.5.1</span><br><span class="line">tqdm               4.64.1</span><br><span class="line">urllib3            1.26.14</span><br><span class="line">wheel              0.38.4</span><br><span class="line">yarl               1.8.2</span><br></pre></td></tr></tbody></table></figure><h3 id="查看示例应用"><a href="#查看示例应用" class="headerlink" title="查看示例应用"></a>查看示例应用</h3><p><a href="https://beta.openai.com/examples">Examples - OpenAI API</a></p><p>打开上方链接，查看 OpenAI 官网所列出的示例应用，此页面包含了 ChatGPT 的主要应用场景。</p><img src="https://files.sunguoqi.com/images/202311250134339.webp"><p>以最简单的问答应用为例，点击<strong>Q&amp;A</strong>后弹出如下界面，之后点击<strong>Open in Playground</strong>按钮。</p><img src="https://files.sunguoqi.com/images/202311250134892.webp"><p>点击<strong>View code</strong>查看本应用的示例代码。</p><img src="https://files.sunguoqi.com/images/202311250134886.webp"><p>复制此代码并粘贴至项目文件<strong>main.py</strong>中。</p><img src="https://files.sunguoqi.com/images/202311250135412.webp"><h3 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h3><p>基于示例，修改后的代码如下，记得修改<strong>api_key</strong>的值。</p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os  </span><br><span class="line"><span class="keyword">import</span> openai  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># openai.api_key = os.getenv("OPENAI_API_KEY")  </span></span><br><span class="line">openai.api_key = <span class="string">"sk-6mWGxEw**************NqKWDXWRRaLxXAPxfEmO"</span>  </span><br><span class="line">  </span><br><span class="line">response = openai.Completion.create(  </span><br><span class="line">    model=<span class="string">"text-davinci-003"</span>,  </span><br><span class="line">    prompt=<span class="string">"Python 是这个世界上最好的语言吗？"</span>,  </span><br><span class="line">    temperature=<span class="number">0</span>,  </span><br><span class="line">    max_tokens=<span class="number">1000</span>,  </span><br><span class="line">    top_p=<span class="number">1</span>,  </span><br><span class="line">    frequency_penalty=<span class="number">0</span>,  </span><br><span class="line">    presence_penalty=<span class="number">0</span>,  </span><br><span class="line">    <span class="comment"># 此参数定义了您的问题终止符 </span></span><br><span class="line">    <span class="comment"># stop=["\n"]   </span></span><br><span class="line">)  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(response)</span><br></pre></td></tr></tbody></table></figure><p>运行该程序，控制台输出如下。</p><figure class="highlight txt"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">  "choices": [</span><br><span class="line">    {</span><br><span class="line">      "finish_reason": "length",</span><br><span class="line">      "index": 0,</span><br><span class="line">      "logprobs": null,</span><br><span class="line">      "text": "\n\n\u4e0d\u662f{此处省略部分字符}\u3002Python\u662"</span><br><span class="line">    }</span><br><span class="line">  ],</span><br><span class="line">  "created": 1674910885,</span><br><span class="line">  "id": "cmpl-6df7dn3shXPJwGmpeTQotLwBW9cPw",</span><br><span class="line">  "model": "text-davinci-003",</span><br><span class="line">  "object": "text_completion",</span><br><span class="line">  "usage": {</span><br><span class="line">    "completion_tokens": 99,</span><br><span class="line">    "prompt_tokens": 26,</span><br><span class="line">    "total_tokens": 125</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码 0</span><br></pre></td></tr></tbody></table></figure><p><code>text</code>即为我们问题的答案，在<strong>main.py</strong>加入下面这行代码。</p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(response.choices[<span class="number">0</span>].text)</span><br></pre></td></tr></tbody></table></figure><p>重新运行此脚本，程序运行结果最终如下。</p><img src="https://files.sunguoqi.com/images/202311250140641.webp"><h3 id="代码解读-1"><a href="#代码解读-1" class="headerlink" title="代码解读"></a>代码解读</h3><p>各参数的含义请查阅官方文档：<a href="https://beta.openai.com/docs/api-reference/completions/create">API Reference - OpenAI API</a></p><p>本程序的代码逻辑比较简单，请读者自行理解。</p><h2 id="WeRoBot"><a href="#WeRoBot" class="headerlink" title="WeRoBot"></a>WeRoBot</h2><p>WeRoBot 项目地址：<a href="https://github.com/offu/WeRoBot">WeRoBot 是一个微信公众号开发框架</a></p><p>在本节，您将使用<strong>WeRoBot</strong>框架创建一个<strong>Hello World</strong>程序。</p><p>当您的公众号后台收到用户发来的消息时，程序会自动调用并发送<strong>Hello World</strong>，如下图所示。</p><img src="https://files.sunguoqi.com/images/202311250139832.webp"><h3 id="安装-werobot-依赖"><a href="#安装-werobot-依赖" class="headerlink" title="安装 werobot 依赖"></a>安装 werobot 依赖</h3><p>使用<strong>ssh</strong>工具打开服务器终端并输入以下命令。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">pip install werobot</span><br></pre></td></tr></tbody></table></figure><h3 id="新建-Python-脚本"><a href="#新建-Python-脚本" class="headerlink" title="新建 Python 脚本"></a>新建 Python 脚本</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> hello.py</span><br></pre></td></tr></tbody></table></figure><p>使用<strong>Vim</strong>打开<strong>hello.py</strong>文件，复制以下内容后保存。</p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> werobot</span><br><span class="line"></span><br><span class="line">robot = werobot.WeRoBot(token=<span class="string">'tokenhere'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@robot.handler</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 让服务器监听在 0.0.0.0:520</span></span><br><span class="line">robot.config[<span class="string">'HOST'</span>] = <span class="string">'0.0.0.0'</span></span><br><span class="line">robot.config[<span class="string">'PORT'</span>] = <span class="number">520</span></span><br><span class="line">robot.run()</span><br></pre></td></tr></tbody></table></figure><h3 id="运行该脚本"><a href="#运行该脚本" class="headerlink" title="运行该脚本"></a>运行该脚本</h3><p>运行该脚本之前，请确保您服务器的<code>520</code>端口已开放。</p><p>输入以下命令运行此脚本。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">python3 ./hello.py </span><br></pre></td></tr></tbody></table></figure><p>终端输出如下。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">Bottle v0.12.23 server starting up (using AutoServer())...</span><br><span class="line">Listening on http://0.0.0.0:520/</span><br><span class="line">Hit Ctrl-C to quit.</span><br></pre></td></tr></tbody></table></figure><h3 id="服务测试"><a href="#服务测试" class="headerlink" title="服务测试"></a>服务测试</h3><p>在浏览器中输入**http://{您服务器的公网ip}:{端口号}**访问此服务。</p><p>如果您看到如下界面，说明本服务已部署成功。</p><img src="https://files.sunguoqi.com/images/202311250139445.webp"><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>由于微信公众号的后台接口只支持<strong>80</strong>和<strong>443</strong>端口，故需要配置<strong>Nginx 反向代理</strong>。</p><img src="https://files.sunguoqi.com/images/202311250139593.webp"><p>您可以使用<strong>宝塔面板</strong>或<strong>Nginx Proxy Manager</strong>配置反向代理，此处不做过多讲解。</p><p>当然，如果您服务器的<strong>80</strong>或<strong>443</strong>端口没有被占用的话，您可以直接将<strong>werobot</strong>运行在该端口下。</p><p>您只需要修改<strong>hello.py</strong>文件中该行代码<strong>robot.config[‘PORT’] = 80/443</strong>即可。</p><h3 id="公众号配置"><a href="#公众号配置" class="headerlink" title="公众号配置"></a>公众号配置</h3><p>打开微信公众平台，<a href="https://mp.weixin.qq.com/">点我</a></p><p>在<strong>设置与开发</strong>选项卡中点击<strong>基本配置</strong>，输入您反向代理后的<strong>域名</strong>，设置您的<strong>令牌</strong>，消息加密点击<strong>自动生成</strong>，加密方式设置成<strong>明文</strong>。</p><p>请注意：这里的令牌必须和<strong>hello.py</strong>中的<strong>token</strong>保持一致。</p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">robot = werobot.WeRoBot(token=<span class="string">'tokenhere'</span>)</span><br></pre></td></tr></tbody></table></figure><img src="https://files.sunguoqi.com/images/202311250138792.webp"><p>输入好配置后我们点击<strong>提交</strong>，然后<strong>启用</strong>该配置即可。</p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World !"></a>Hello World !</h3><p>不出意外的话，当用户在您的后台发送任何消息时，后台便会自动发送**Hello world`</p><h3 id="数据转发原理"><a href="#数据转发原理" class="headerlink" title="数据转发原理"></a>数据转发原理</h3><img src="https://files.sunguoqi.com/images/202311250138991.webp"><p>如上图所示，当在微信公众号后台发送消息时，数据首先会发送到微信服务器上，如果公众号后台配置了接口信息，那么<strong>微信服务器</strong>便会将数据转发到<strong>开发者服务器</strong>。由<strong>开发者服务器</strong>做出响应，再经过<strong>微信服务器</strong>发送到微信公众号客户端。</p><h2 id="ChatGPT-WeRoBot"><a href="#ChatGPT-WeRoBot" class="headerlink" title="ChatGPT &amp; WeRoBot"></a>ChatGPT &amp; WeRoBot</h2><p>首先，恭喜您已经完成了上面两个小节的内容。</p><p>在本节，我们将会把 ChatGPT 和 WeRoBot  融合成一个脚本，当用户输入信息时，后台响应的不再是**Hello World`，而是经过 ChatGPT 处理后的结果。</p><h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><p>在服务器中新建<strong>chatgpt.py</strong>文件，并将以下代码复制到该文件中。</p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> werobot</span><br><span class="line"><span class="keyword">import</span> openai</span><br><span class="line"></span><br><span class="line">robot = werobot.WeRoBot(token=<span class="string">'你的 Token'</span>)</span><br><span class="line"></span><br><span class="line">openai.api_key = <span class="string">"你的 api_key"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_response</span>(<span class="params">prompt</span>):</span><br><span class="line">&nbsp; &nbsp; response = openai.Completion.create(</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; model = <span class="string">"text-davinci-003"</span>,</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; prompt = prompt,</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; max_tokens = <span class="number">1000</span>,</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; temperature = <span class="number">0.5</span>,</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; top_p = <span class="number">1</span>,</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; frequency_penalty = <span class="number">0.0</span>,</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; presence_penalty = <span class="number">0.0</span>,</span><br><span class="line">&nbsp; &nbsp; )</span><br><span class="line">&nbsp; &nbsp; message = response.choices[<span class="number">0</span>].text</span><br><span class="line">&nbsp; &nbsp; <span class="keyword">return</span> message.strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@robot.handler</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">message</span>):</span><br><span class="line">&nbsp; &nbsp; <span class="keyword">return</span> generate_response(message.content)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本程序将在 520 端口运行</span></span><br><span class="line">robot.config[<span class="string">'HOST'</span>] = <span class="string">'0.0.0.0'</span> </span><br><span class="line">robot.config[<span class="string">'PORT'</span>] = <span class="number">520</span></span><br><span class="line">robot.run()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><p>当我们关掉<strong>ssh 会话</strong>连接时，我们在此会话中运行的进程便会被杀死，如何解决这个问题呢？</p><p>这里推荐大家使用<strong>Screen</strong>对进程进行管理，常用命令如下。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">安装：</span><br><span class="line"><span class="comment">#CentOS系统安装命令</span></span><br><span class="line">yum install screen</span><br><span class="line"> </span><br><span class="line"><span class="comment">#Debian/Ubuntu安装命令</span></span><br><span class="line">apt-get install screen</span><br><span class="line"></span><br><span class="line">创建：</span><br><span class="line"><span class="comment"># 新建 screen</span></span><br><span class="line">screen -S&nbsp;your_screen_name</span><br><span class="line"></span><br><span class="line">查看：</span><br><span class="line"><span class="comment"># 查看 screen 列表</span></span><br><span class="line">screen -<span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">进入：</span><br><span class="line"><span class="comment"># 进入 screen</span></span><br><span class="line">screen -r xxx</span><br><span class="line"></span><br><span class="line">删除：</span><br><span class="line"><span class="comment"># 在当前screen下，输入Ctrl+D，删除该screen</span></span><br><span class="line">Ctrl+D</span><br><span class="line"></span><br><span class="line">退出：</span><br><span class="line"><span class="comment"># 在当前screen下，输入先后Ctrl+A，Ctrl+D，退出该screen</span></span><br><span class="line">Ctrl+A，Ctrl+D</span><br><span class="line"></span><br><span class="line">杀死：</span><br><span class="line"><span class="comment"># 删除指定screen, your_screen_name为待删除的screen name</span></span><br><span class="line">screen -S your_screen_name&nbsp;-X quit</span><br></pre></td></tr></tbody></table></figure><h3 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h3><p>确保您服务器的<strong>520</strong>端口 (端口号以实际开发为准) 已开放，且没被占用。</p><p>在终端中输入以下命令，创建一个<code>screen</code>。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">screen -S chatgpt</span><br></pre></td></tr></tbody></table></figure><p>进入<code>screen</code>后，输入以下命令运行<code>chatgpt.py</code>即可。</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">python3 ./chatgpt.py</span><br></pre></td></tr></tbody></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h3><p>由于敏感原因，请确保您的电脑和服务器都可以正常访问境外网络。</p><h3 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h3><p>OpenAI 账号注册可参考此教程 <a href="https://zhuanlan.zhihu.com/p/589642999">OpenAI ChatGPT 注册保姆级攻略，绝对有效 - 知乎 (zhihu.com)</a></p><h3 id="微信公众号自定义菜单及关键词回复失效"><a href="#微信公众号自定义菜单及关键词回复失效" class="headerlink" title="微信公众号自定义菜单及关键词回复失效"></a>微信公众号自定义菜单及关键词回复失效</h3><p>由于我们使用了自定义的接口，便无法再使用官方提供的<strong>自定义菜单</strong>及<strong>关键词回复</strong>等功能。</p><p>二者功能实现可参考<strong>WeRoBot</strong>文档自行开发。</p><img src="https://files.sunguoqi.com/images/202311250137197.webp"><img src="https://files.sunguoqi.com/images/202311250137084.webp"><h3 id="该公众号提供的服务出现故障，请稍后再试！"><a href="#该公众号提供的服务出现故障，请稍后再试！" class="headerlink" title="该公众号提供的服务出现故障，请稍后再试！"></a>该公众号提供的服务出现故障，请稍后再试！</h3><p>微信官方为了优化用户体验，对接口制定了如下规则：</p><blockquote><p>微信服务器在五秒内如果收不到开发者服务器的响应便会主动断掉连接，并且重新发起请求，总共重试三次。</p></blockquote><p>此规则会对本程序带来一定的限制，如果用户输入的文本较为复杂或者 ChatGPT 较难处理的话，服务器的响应时间通常会超过 5s，客户端便会收到<strong>该公众号提供的服务出现故障，请稍后再试</strong>的消息。</p><p>未认证的公众号暂时无法突破此限制（已认证的公众号可以采取被动模式接收消息，待程序处理完成后使用主动模式进行发送消息的方法突破此限制）。</p><p>对于用户而言，建议您采用<strong>英语</strong>进行提问，并且<strong>精炼</strong>您的语言，以避免 ChatGPT 处理复杂文本而超时。</p>]]></content>
      
      
      <categories>
          
          <category> 实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 热门 </tag>
            
            <tag> AI </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>请接受像“屎”一样的开始</title>
      <link href="/posts/1db87a14/"/>
      <url>/posts/1db87a14/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么我又把公众号给清空了"><a href="#为什么我又把公众号给清空了" class="headerlink" title="为什么我又把公众号给清空了"></a>为什么我又把公众号给清空了</h2><p>已经记不起最初注册公众号是出于什么目的了，但运营好它的想法却从未打消。</p><p>为什么我又双叒叕把公众号给清空了呢？</p><p>原因有很多，但我想最核心的一条应该是：我太想追求完美了！</p><h3 id="什么样的排版更好看"><a href="#什么样的排版更好看" class="headerlink" title="什么样的排版更好看"></a>什么样的排版更好看</h3><p>相较于 Markdown，富文本编辑器拥有着更广阔的美化空间。但恰恰是因为玩法太多，才更难下手。</p><p>其次，富文本编辑器不支持很多功能，不能嵌入 HTML 代码，不能优雅地复制粘贴等等。</p><img src="https://files.sunguoqi.com/images/202311250116901.webp"><p>作为习惯了使用 Markdown 语法来记录文字的键盘工作者而言，突然使用富文本编辑器就如同让一个有经验的Web开发者使用Adobe Dreamweaver去编写网页。</p><p>可以，但真的。。。没有必要。。。</p><h3 id="文章发布之后无法修改"><a href="#文章发布之后无法修改" class="headerlink" title="文章发布之后无法修改"></a>文章发布之后无法修改</h3><p>作为手残党，文章大体写好之后，难免会出现一些错别字或者语句不通顺的地方。</p><p>但文章一旦发布，微信公众平台只留给作者修改几个字的机会，对于强迫症而言，达咩~</p><img src="https://files.sunguoqi.com/images/202311250116993.webp"><h3 id="公众号没有留言功能"><a href="#公众号没有留言功能" class="headerlink" title="公众号没有留言功能"></a>公众号没有留言功能</h3><p>根据国家监管部门要求，自2018年2月12日起，新注册的微信公众账号暂无留言功能。</p><p>不愧是China，不愧是腾讯。</p><p>对于自媒体而言，和用户的互动至关重要。</p><p>公众号没有留言功能，作者便无法及时得到读者的反馈，很难继续改进和成长。</p><p>虽然可以通过其他途径给个人号开通留言功能，但是相对来说成本比较高。（暂时不考虑）</p><img src="https://files.sunguoqi.com/images/202311250117278.webp"><h3 id="没有粉丝基础，写了东西没人看"><a href="#没有粉丝基础，写了东西没人看" class="headerlink" title="没有粉丝基础，写了东西没人看"></a>没有粉丝基础，写了东西没人看</h3><p>在考研备考期间，我详细了解了一下<strong>复利</strong>的概念。</p><img src="https://files.sunguoqi.com/images/202311250117498.webp"><p>正如上图所示，当我们付出了宝贵的时间，很用心地做了一件事情之后，却迟迟不见收益。</p><p>是我们努力的方向不对么？并不见得。</p><p>量变引起质变，我想更大程度上是因为我们不够坚持。</p><p>其次，无论是写个人博客也好，还是运营公众号，我们最大的读者永远是自己。</p><p>在庞大的互联网中，我们给自己开辟了一个小小的空间，在这里记录一些日常，分享一些感悟，倾诉一些烦恼，如此而矣。</p><h2 id="请接受像“💩”一样的开始"><a href="#请接受像“💩”一样的开始" class="headerlink" title="请接受像“💩”一样的开始"></a>请接受像“💩”一样的开始</h2><p>完成比完美更重要，不完美也是完美的一部分。</p><p>面对一个全新的事情，刚开始做不完美几乎是板上钉钉的事情。</p><p>如果要求自己上来就做的很好，就相当于找了根绳子把自己的手和脚都绑了起来，那又该如何行走呢。</p><p>接受像“屎”一样的开始，我想，我现在便可以起航了！</p><img src="https://files.sunguoqi.com/images/202311250117553.webp">]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 运营 </tag>
            
            <tag> 公众号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再见，2022！你好，2023！</title>
      <link href="/posts/84b12bae/"/>
      <url>/posts/84b12bae/</url>
      
        <content type="html"><![CDATA[<p><strong>在文章的开头，先祝各位朋友新春快乐，兔年大吉，学业有成，工作顺心，万事胜意🎉</strong></p><p>不知不觉，今天已经正月初五了。</p><p>按原计划，本文应该在年前完成，但却未能如愿。</p><p>似乎 22 年真的没有什么值得记录的，似乎我还没有鼓起勇气与 22 年做真正的告别。</p><h2 id="去年计划"><a href="#去年计划" class="headerlink" title="去年计划"></a>去年计划</h2><p>过去的一年其实没给自己定太多计划，主线任务就是能顺利完成研考。</p><img src="https://files.sunguoqi.com/images/202311250211367.webp"><h2 id="为什么考研"><a href="#为什么考研" class="headerlink" title="为什么考研"></a>为什么考研</h2><p>我曾问过我身边的朋友，你们为什么会选择考研？答案大概有以下几种：</p><ul><li>想留校或去高校任教，考研读博是必要的一环</li><li>感觉大学没学到什么东西，想考个研试一试，学一些真本事</li><li>考上了就上，考不上就再去找工作，试试吗，试一试总没什么坏处吧</li><li>实在不喜欢现在所学的专业，想追逐自己的兴趣，学一些自己真正想学的知识</li><li>大学四年，疫情三年，现在太卷了，不想这么早的进入社会，想给自己的校园时光续费</li><li>研究生相对于本科生毕业后的起始薪资会高很多，现在就业形势比较复杂，先考个研，“混”几年再就业嘛</li><li>高考没考好，想通过考研的方式提升一下自己的学历，日后也能认识更多优秀的人，可以扩展一下自己的人脉吧</li></ul><h3 id="我为什么考研"><a href="#我为什么考研" class="headerlink" title="我为什么考研"></a>我为什么考研</h3><img src="https://files.sunguoqi.com/images/202311250212455.gif"><p>一、二年级的时候，我脑海里从来没有冒出过任何关于考研的念头，对自己的学业也是非常的不上心。</p><p>直到后来，我找到了自己的兴趣点，发现了自己可以热爱一辈子的事情——Coding。</p><h3 id="编程是一门实用的艺术"><a href="#编程是一门实用的艺术" class="headerlink" title="编程是一门实用的艺术"></a>编程是一门实用的艺术</h3><p>编程是一种创作和表达自己的工具，正如音乐家的乐谱，画家的色彩，作家的文字。</p><p>但是，从来没有一种创作工具能够像编程一样强大和自由，也从来没有一种工具能够像编程一样承载我们的天马行空。</p><p>可上九天揽月，亦可下五洋捉鳖。它是这个信息爆炸的时代赐予我们理工科人表达自己、眺望远方的礼物。</p><blockquote><p><strong>编程的感受</strong></p><p>    ——节选自小米科技创始人雷军<a href="http://leijun.blog.techweb.com.cn/archives/date/2008/10">《我的程序人生路》</a></p><br><p><strong>程序员活在自己想象的王国里</strong><br><br></p><p>我刚接触电脑就发现了电脑的妙处，电脑远没有人那么复杂。如果你的程序写得好，你就可以和电脑处好关系，就可以指挥电脑干你想干的事。</p><br><p>这个时候你是十足的主宰。每每你坐在电脑面前，你就是在你的王国里巡行，这样的日子简直就是天堂般的日子。</p><br><p>电脑里的世界很大，编程人是活在自己想象的王国里。你可以想象到电脑里细微到每一个字节、每一个比特的东西。</p><p><strong>我爱编程这个工作，可以肯定我会干上一辈子</strong></p><p>...</p></blockquote><h3 id="如何才能走的更远、走的更稳"><a href="#如何才能走的更远、走的更稳" class="headerlink" title="如何才能走的更远、走的更稳"></a>如何才能走的更远、走的更稳</h3><p>确定了前进方向，我便开始思索如何才能走的更远，走的更稳。</p><p>鉴于我非科班的技术背景，我感到些许惶恐，想留给自己更多在校学习的时间，增长自己的见识，丰富自己的阅历，精进自己的能力，以充足的准备踏入我所热爱的事业。</p><p>这便是我最初的想法。</p><img src="https://files.sunguoqi.com/images/202311250213638.webp"><h2 id="23-考研大致回顾"><a href="#23-考研大致回顾" class="headerlink" title="23 考研大致回顾"></a>23 考研大致回顾</h2><img align="center" src="https://files.sunguoqi.com/images/202311250213504.webp"><p>从三月份着手准备到十二月份考试结束，期间大概有 300 天左右。</p><p>备考时间看似很长，但其实有效的学习时间得大打折扣。</p><h3 id="艰难的开始"><a href="#艰难的开始" class="headerlink" title="艰难的开始"></a>艰难的开始</h3><p>刚开始的时候真的很迷茫、很懵，不知道该看谁的课，做谁的题，报哪所学校，买哪份的资料。。。</p><p>况且，真的有太久没有碰像数学、英语这类公共课了，把高中原有的基础拾起来都需要一段时间。</p><p>3-6 月份，学校里还有一些课程需要学习。4 月份，因为疫情的原因被封在宿舍里一个月左右。5 月底、6 月初又要准备期末考试。。。</p><p>这段时间粗略的看了一些专业课的内容（数据结构、计算机网络）。高数和线代也大概过了一遍基础。英语背了一些单词，做了一些阅读。政治没有看。</p><h3 id="暑假关键期"><a href="#暑假关键期" class="headerlink" title="暑假关键期"></a>暑假关键期</h3><p>暑假是备考的黄金期，这段时间我主攻的还是数学和专业课，其次是英语。</p><p>但炎热的天气让人稍感焦躁，因为基础不牢，强化阶段也是困难重重。</p><h3 id="不安的-10-11-月"><a href="#不安的-10-11-月" class="headerlink" title="不安的 10-11 月"></a>不安的 10-11 月</h3><p>10-11 月份，主要的任务就是刷真题和模拟题。</p><p>对于数学的话，20 年以前的真题其实做的还可以，但计算量真的很大，三个小时内很难保质保量的把所有会做的都完成。20 年以后的题，难度算是上了一个台阶，思考量和计算量都大了起来，有点招架不住。至于模拟题，主要做了李林的六套卷和四套卷（都没做完），做到接近崩溃。</p><p>由于没有合理规划，专业课的知识在这个阶段其实忘掉了很多，导致专业课真题迟迟无法向前推进，最后只能以题带学，做了近些年的真题。</p><p>英语的话，做了近些年的阅读。虽然在时间允许的条件下，正确率还算可观，但也很难在规定的时间保质保量的完成。</p><p>大概在 11 月初，我才正式开始考研政治的学习。虽然之前看过一些，但都不成体系，也没做相应的练习，看了大概一个星期的理论知识后就直接做肖 8 选择题了。</p><h3 id="摆烂的十二月"><a href="#摆烂的十二月" class="headerlink" title="摆烂的十二月"></a>摆烂的十二月</h3><p>11 月底，国内各省新增大量的阳性感染病例，疫情形势又变的严峻了起来。</p><p>12.4 日，学校查出了一例阳性，暂停了堂食，图书馆闭馆，学生自觉待在宿舍里隔离。</p><img width="500px" src="https://files.sunguoqi.com/images/202311250213614.webp"><p>这次大概在宿舍里隔离了两天，这两天基本上没怎么学习，也大概就是这两天的时间，紧绷的弦突然松弛了下来。</p><p>随着 11 月底，<strong>国考</strong>（还有其他各种考试等）延期的通知，<strong>23 考研</strong>是否会延期的话题也被推上风口。</p><img src="https://files.sunguoqi.com/images/202311250214682.webp"><p>待在宿舍，不想学习，我便密切关注着此类消息，知乎，B 站，微博大概都刷了个遍。</p><p>考研是否延期和疫情的形势有着密切的关系。</p><p>起初，疫情来势迅猛，各地政府仍采取“清零政策”，又是全员核酸，又是静默隔离。</p><p>但随着 12.7 日《新十条》的发布，防疫政策突然急转弯，国内舆论也是炸开了锅。</p><p>事出蹊跷必有妖，于是我便在外网了解了一些“时事政治”。只能说，<strong>这历史没有年代</strong>。</p><img width="600px" src="https://files.sunguoqi.com/images/202311250214774.webp"><p>放开之后，阳的人越来越多。</p><p>21 日，按照规定，考生进行了全员核酸。</p><p>22 日，学校查出大量阳性。</p><img width="600px" src="https://files.sunguoqi.com/images/202311250215084.webp"><p>其实关于考研延期的呼声直至 23 号晚上都很强烈，但。。。大家懂得都懂。</p><img src="https://files.sunguoqi.com/images/202311250215033.webp"><h3 id="戏剧化的结束"><a href="#戏剧化的结束" class="headerlink" title="戏剧化的结束"></a>戏剧化的结束</h3><p>23 日，临近考试的前一天晚上，我感到身体有些不适，便量了一下体温，37.7℃。</p><p>这晚明明很困，但的确是睡不着觉，辗转反侧，最后大概只休息了一个多小时。</p><img width="600px" src="https://files.sunguoqi.com/images/202311250230081.webp"><p>起床后，赶紧又测了一下体温，38.8℃。</p><img src="https://files.sunguoqi.com/images/202311250216260.webp"><p>比较奇怪的一点是，虽然身体真的很热，但大脑却异常兴奋。迷迷糊糊没有吃退烧药便去了考场。</p><p>坐下之后，逐渐感觉到非常不适，开始头昏脑胀，最后烧的两眼生疼。</p><p>11:30，我浑身无力的走出了考场，耳边仿佛一直环绕着一个声音：下午还要不要去了？</p><p>不知从教学楼到宿舍楼之间的这段路我走了多久。。。</p><p>回到了宿舍便吃了粒退烧药，趴在了桌上。</p><img src="https://files.sunguoqi.com/images/202311250216098.webp"><p>虽说身体是革命的本钱，放弃一场考试天也不会塌下来。但思考良久，我还是选择了坚持。</p><p>如果当时我真的选择了放弃，我想现在的我应该会非常的自责。</p><p>大概 1:30 的时候，烧退了一些，我便去了考场，参加了下午的英语考试。</p><p>第二天的身体状态较第一天好了些，但喉咙还是特别的痒，还是不停的咳嗽。</p><h2 id="备考中の生活碎片"><a href="#备考中の生活碎片" class="headerlink" title="备考中の生活碎片"></a>备考中の生活碎片</h2><details class="folding-tag"><summary> 22.03.05 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250216322.webp">              </div>            </details><details class="folding-tag"><summary> 22.03.05 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250216310.webp">              </div>            </details><details class="folding-tag"><summary> 22.03.20 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250217637.webp">              </div>            </details><details class="folding-tag"><summary> 22.04.09 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250217148.webp">              </div>            </details><details class="folding-tag"><summary> 22.04.23 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250217282.webp">              </div>            </details><details class="folding-tag"><summary> 22.05.17 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250218964.webp">              </div>            </details><details class="folding-tag"><summary> 22.06.03 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250218581.webp">              </div>            </details><details class="folding-tag"><summary> 22.06.04 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250218609.webp">              </div>            </details><details class="folding-tag"><summary> 22.06.17 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250223233.webp">              </div>            </details><details class="folding-tag"><summary> 22.07.18 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250223314.webp">              </div>            </details><details class="folding-tag"><summary> 22.08.06 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250222105.webp">              </div>            </details><details class="folding-tag"><summary> 22.08.22 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250222689.webp">              </div>            </details><details class="folding-tag"><summary> 22.10.12 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250222409.webp">              </div>            </details><details class="folding-tag"><summary> 22.11.24 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250221726.webp">              </div>            </details><details class="folding-tag"><summary> 22.12.19 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250221976.webp">              </div>            </details><details class="folding-tag"><summary> 22.12.24 </summary>              <div class="content">              <img src="https://files.sunguoqi.com/images/202311250221718.webp">              </div>            </details><h2 id="考研教会我哪些道理"><a href="#考研教会我哪些道理" class="headerlink" title="考研教会我哪些道理"></a>考研教会我哪些道理</h2><p>2005 年，乔布斯在斯坦福大学的演讲中有这样一段话：</p><p>完整视频链接：<a href="https://www.bilibili.com/video/BV1oW411h7Ea">点我</a></p><blockquote><p><i>None of this had even a hope of any practical application in my life. But ten years later, when we were designing the first Macintosh computer, it all came back to me. And we designed it all into the Mac. It was the first computer with beautiful typography. If I had never dropped in on that single course in college, the Mac would have never had multiple typefaces or proportionally spaced fonts. And since Windows just copied the Mac, its likely that no personal computer would have them.</i><br><br></p><p><strong>当时看来，这些东西好像对我的人生来说没有任何实用价值。但是十年之后，当我们设计第一台苹果电脑的时候，它一下子就浮现了出来。我们将这些东西全部设计进了我们的电脑。于是漂亮的印刷体第一次出现在了电脑上。如果我当年没有旁听这一门课，苹果就不会有如此丰富的字体，以及漂亮的字间距。鉴于微软只知道抄袭苹果，估计所有个人电脑都不会有这些。</strong><br><br></p><p><i>If I had never dropped out, I would have never dropped in on this calligraphy class, and personal computers might not have the wonderful typography that they do. Of course it was impossible to connect the dots looking forward when I was in college. But it was very, very clear looking backwards ten years later.</i><br><br></p><p><strong>如果我没有退学，没有旁听这门书法课，也许所有的电脑都不会有如此美丽的印刷体。当然，在大学的时候，我不可能预见到它们之间的联系，但今天回首往事，一切都非常明了。</strong><br><br></p><p><i>Again, you can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something, your gut, destiny, life, karma, whatever. Because believing the dots will connect down the road, will give you the confidence to follow your heart, even when it lead you off the well-worn path, and it has made all the difference.</i><br><br></p><p><strong>同样的，你也无法预知未来。只有回头看时，才会发现它们之间的关系。所以，你必须相信你现在获得的点滴会在未来连接起来。你必须相信一些东西，直觉，命运，人生，因果，什么都没关系。因为如果你相信这些点滴会连接起你未来的道路，你就会拥有跟随你自己内心的自信，哪怕离经叛道，也决不止步。只有这样，才能有所成。</strong><br><br></p></blockquote><p>我们无法预知明天会发生什么，但我们仍需要过完今天。</p><p>任何经历都有意义，可能五年后，十年后，二十年后，我们才会发现其价值。</p><p>因而，计较当下的得失或许并非明智之举，我们应该从过去的经历中汲取养分，将其浓缩成一个一个可检索的点，并相信，它会在未来大放异彩。</p><img src="https://files.sunguoqi.com/images/202311250221155.webp"><h3 id="如何学习"><a href="#如何学习" class="headerlink" title="如何学习"></a>如何学习</h3><p>我一直都是一个不太懂如何高效学习的人，直至今日，我仍在探索。</p><p>大学两年半的迷离生活，让我的学习产生了一定程度的断层（特指一些为了应试而必要的学习行为）。</p><p>这使得我在备考初期，不得不去直面一些问题，学习的本质是什么？该如何学习？如何才能更高效地学习？</p><p>零零碎碎读了一些文章，也看了一些科普性质的视频，接触到了一些关于脑科学、哲学、人类学、心理学等方面的知识（当然，只是蜻蜓点水而已）。</p><p>后来了解到，这些研究被归类为一个名为“认知科学”的交叉学科。</p><img src="https://files.sunguoqi.com/images/202311250220320.webp"><blockqutoe><br><i>  认知科学（英语：Cognitive Science），是一门研究讯息如何在大脑中形成以及转录过程的跨领域学科。它研究何谓认知，认知有何用途以及它如何工作，研究信息如何表现为感觉、语言、注意、推理和情感。其研究领域包括心理学、哲学、人工智能、神经科学、学习、语言学、人类学、社会学和教育学。它跨越相当多层次的分析，从低层次的学习和决策机制，到高层次的逻辑和策划能力，以及脑部神经电路。“认知科学”这个词是克里斯多福·龙格 - 希金斯（英语：H. Christopher Longuet-Higgins）在 1973 年评注一部关于当时人工智能最新研究的著作莱特希尔报告（英语：Lighthill report）时创造的。同 10 年内，《认知科学期刊》和认知科学学会（英语：Cognitive Science Society）相继于美国加州成立。认知科学的基本要义是：理解思维的最好途径，是认识脑中的代表性结构，以及这些结构中发生的计算性过程。</i></blockqutoe><p>作为一名普通的汽车驾驶员，只需要掌握最基本的驾驶操作就可以满足其需求，的确没必要去了解汽车的工作原理。</p><p>但如果你是一名职业赛车手，我想你应该需要了解更多关于汽车的知识，才能充分发挥汽车的性能。</p><p>在备考初期，我第一次关注到了这个问题，直至今日。</p><h3 id="成长的陷阱"><a href="#成长的陷阱" class="headerlink" title="成长的陷阱"></a>成长的陷阱</h3><p>在考研期间，我偶然接触到了一本书，名叫《认知觉醒》。</p><p>先和大家分享一下该书的序言（节选），原文链接：<a href="https://mp.weixin.qq.com/s/NSvU2znXSW7VJkyccB9qgg">点我</a></p><blockquote><p><strong>我们对自己的无知，使得自己看起来就像是一个“醒着的睡着的人”。</strong><br><br>    </p><p><strong>我知道一个人不可能同时“醒着”和“睡着”，这二者显然是矛盾的。</strong><br><br></p><p><strong>所以在你准备指出这个逻辑错误之前，不妨先随我一起看看我们的人生轨迹，或许你会同意这个说法。</strong><br><br></p><p><strong>如果不出意外，我们每个人都会沿着“童年—求学—工作—婚恋”的路线成长，随着生活的惯性一直往前走。</strong><br><br></p><p><strong>年轻的时候，几乎没有人会觉得自己的将来会有多差，认定美好的生活会自然到来。</strong><br><br></p><p><strong>即使暂时说不清具体该怎么做，但有一颗十足的信心就足够了，毕竟年轻无敌嘛！</strong><br><br></p><p><strong>然而现实并不总是和我们想象的那样。</strong><br><br></p><p><strong>在这颗十足的信心陪伴多年之后，大多数人发现自己并没有变得更加特别，而是在不断地顺从社会规则和应对生活烦恼中开始随波逐流：</strong><br><br></p><p><strong>该刷手机刷手机、该打游戏打游戏，没有多少压力，也没有多少动力，反正日子还过得去，希望也还在心里。</strong><br><br></p><p><strong>偶尔挣扎呐喊一声，而后继续做着短视的选择，沉溺眼前的安逸。</strong><br><br></p><p><strong>他们浑然不知这个世界的运行规则，不知事物的构成框架，不清楚努力的方法路径，也不清楚自己真正想要什么，能做什么，最后会成为什么。</strong><br><br></p><p><strong>就像一个睁不开眼睛的人，根本看不到眼前还有另外一个世界。</strong><br><br></p><p><strong>迷迷糊糊到了某个年纪，他们突然发现自己对这个世界已经无能为力了。</strong><br><br></p><p><strong>梦想和现实落差巨大，生活和工作压力缠身，而优秀的同龄人已绝尘而去。</strong><br><br></p><p><strong>一时间焦虑与急躁攻心，悔恨与绝望盖顶，万念俱灰却又如梦初醒：</strong><br><br></p><p><strong>“为什么没有早点知道这个世界的真相？为什么没有在最好的年纪里及时觉醒？”</strong><br><br></p><p><strong>但即使含泪拷问，一切也似乎都晚了，毕竟人生是个单行道，无法从头再来。</strong><br><br></p><p><strong>最后不得不敲碎那颗高傲的心，在无奈和叹息中默默接受平庸的人生。</strong></p><p></p></blockquote><img src="https://files.sunguoqi.com/images/202311250220276.webp"><p>这本书对我的影响其实很大，它让我开始深度反思过去。</p><p>我们为什么要学习？为什么要参加高考？为什么上了大学又为什么选择了现在所学的专业，为什么考研？</p><p>很多时候，我们没有一个清晰明确的目标，而是被家长、被社会、被时代推着往前走。</p><p>18 岁以前，我们为了高考而拼命读书，但山的那边究竟是什么？</p><p>“上了大学你们就自由了！”，真是如此吗？</p><p>从满怀热情到渐渐佛系，后来，我们发现大学也不过如此。</p><p>这是自然成长必须经历的陷阱。</p><p>更多时候，我们并非人生的导演，而是生活的演员。</p><h3 id="你永远无法准备好"><a href="#你永远无法准备好" class="headerlink" title="你永远无法准备好"></a>你永远无法准备好</h3><p>2019 年，库克在斯坦福大学的演讲中有这样一段话：</p><p>完整视频链接：<a href="https://www.bilibili.com/video/BV1p4411G7E6">点我</a></p><blockquote><p><i>Fourteen years ago, Steve stood on this stage and told your predecessors: “Your time is limited, so don’t waste it living someone else’s life.” Here’s my corollary: “Your mentors may leave you prepared, but they can’t leave you ready.”</i><br><br></p><p><strong>14 年前，乔布斯站在这个讲台上告诉你们的前辈：“你的时间是有限的。所以不要浪费时间过其他人的生活。”我想要告诉你们的是：“导师们也许能让你做好准备，但你永远无法准备好。”</strong><br><br></p><p><i>When Steve got sick, I had hardwired my thinking to the belief that he would get better. I not only thought he would hold on, I was convinced, down to my core, that he’d still be guiding Apple long after I, myself, was gone. Then, one day, he called me over to his house and told me that it wasn’t going to be that way.Even then, I was convinced he would stay on as chairman. That he’d step back from the day to day but always be there as a sounding board.</i><br><br></p><p><strong>乔布斯生病的时候，我坚信他会好起来。我不仅觉得他会坚持下去，而且还相信即便在我过世许久之后，他都会继续引导苹果。然后，有一天他把我叫到他家里，告诉我事情不是我想象的那样。即使在那时，我都坚信他会继续担任董事长。即使他不再管理日常事务，也会作为决策咨询人常伴左右。</strong><br><br></p><p><i>But there was no reason to believe that. I never should have thought it. The facts were all there. And when he was gone, truly gone, I learned the real, visceral difference between preparation and readiness. It was the loneliest I’ve ever felt in my life. By an order of magnitude. It was one of those moments where you can be surrounded by people, yet you don’t really see, hear or feel them. But I could sense their expectations.</i><br><br></p><p><strong>可是这样的想法是没有道理的，我不应该这样欺骗自己。因为事实都摆在那里。当他真正走了之后，我才明白了“做准备”和“准备好了”的本质区别。那是我一生中最孤独的时刻。这些时刻就像是你虽被人群包围，但是却无法真实地看见、听到和感知他们。但我可以感受到他们的期望。</strong><br><br></p><p><i>When the dust settled, all I knew was that I was going to have to be the best version of myself that I could be. I knew that if you got out of bed every morning and set your watch by what other people expect or demand, it’ll drive you crazy. </i><br><br></p><p><strong>当事情尘埃落定，我唯一知道的是，我必须努力成为我能达到的最好的自己。我明白那种每天早上起床，整天都要按照其他人对你的期待和需求去安排事务的感觉，这种感觉简直可以把人逼疯。</strong><br><br></p><p><i>So what was true then is true now. Don’t waste your time living someone else’s life. Don’t try to emulate the people who came before you to the exclusion of everything else, contorting into a shape that doesn’t fit.It takes too much mental effort – effort that should be dedicated to creating and building. You’ll waste precious time trying to rewire your every thought, and, in the mean time, you won’t be fooling anybody. </i><br><br></p><p><strong>正如乔布斯 14 年前所说的那样，不要浪费你的时间去过其他人的生活。彼时此时都适用。不要试图模仿前人，放弃其他所有，逼迫自己成为不合自己心意的样子。这会花掉太多精力，而这些精力本应该用来创造和建设。试图重塑你的每个想法，简直就是在浪费宝贵的时间，同时，别人也能看出你在假装。</strong><br><br></p><p><i>Graduates, the fact is, when your time comes, and it will, you’ll never be ready. But you’re not supposed to be. Find the hope in the unexpected. Find the courage in the challenge. Find your vision on the solitary road.</i><br><br></p><p><strong>毕业生们，事实是，当该你上场时，这一刻终将到来，你永远也不可能准备好。但你也不需要准备好。去始料未及处找寻希望，去挑战中寻求勇气，在孤独道路上认清你的方向。</strong><br><br></p><p><i>Don’t get distracted. There are too many people who want credit without responsibility. Too many who show up for the ribbon cutting without building anything worth a damn.</i><br><br></p><p><strong>别分心。总有太多人只想要荣誉，不愿担责任。总有太多人登台剪彩却毫无建树。</strong><br><br></p><p><i>Be different. Leave something worthy. And always remember that you can’t take it with you. You’re going to have to pass it on.</i><br><br></p><p><strong>保持与众不同，留下有价值的东西。始终记住你带不走你所建设的东西，你得将它们传下去。</strong><br><br></p><p></p></blockquote><p>等准备好了再去旅行。</p><p>等准备好了再去创业。</p><p>等准备好了再去做自媒体。</p><p>等准备好了再去追逐爱情。</p><p>事实上，我们永远无法准备好，完成比完美更重要。</p><h2 id="你好，蔚来！你好，未来！"><a href="#你好，蔚来！你好，未来！" class="headerlink" title="你好，蔚来！你好，未来！"></a>你好，蔚来！你好，未来！</h2><p>2022 年 2 月 8 号，我收到了一封邮件。</p><img src="https://files.sunguoqi.com/images/202311250219037.webp"><p>2023 年 1 月 9 号，我决定放手一搏。</p><img src="https://files.sunguoqi.com/images/202311250219031.webp"><p>去始料未及处找寻希望，在挑战中寻求勇气。</p><p>你好，蔚来！你好，未来！再见，2022！</p>]]></content>
      
      
      <categories>
          
          <category> 年终总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Flask 快速构建豆瓣图书/电影海报 WebAPI</title>
      <link href="/posts/defe59e4/"/>
      <url>/posts/defe59e4/</url>
      
        <content type="html"><![CDATA[<p>新年新气象，最近一直在折腾新博客，准备好好装修一番。</p><p>在 <a href="https://gh.sunguoqi.com/books">旧站</a> 中，有一个<strong>豆瓣图书/电影</strong>的展示页面，感觉还不错。</p><p>于是就想在新网站中也加入该元素，另一方面也可以促进自己<strong>多阅读</strong>，<strong>多观影</strong>。<br></p><img src="https://files.sunguoqi.com/images/202312091442060.webp"><h2 id="一、初步探索"><a href="#一、初步探索" class="headerlink" title="一、初步探索"></a>一、初步探索</h2><p>emmmm，怎么引入呢？直接开发插件？还没学会 halo 的插件如何开发❌</p><p>先去 GitHub 上搜搜，看看有没有相关的项目吧？好主意✅</p><p>于是便找到了该仓库 <a href="https://github.com/sadjjk/DoubanPoster">传送门</a></p><img src="https://files.sunguoqi.com/images/202312091442763.webp"><p>仓库已经是三年前创建的了，先看看代码可不可以正常跑吧！</p><p>果然。。。有 Bug，哈哈哈！</p><img src="https://files.sunguoqi.com/images/202312091443113.webp"><h2 id="二、解决-Bug"><a href="#二、解决-Bug" class="headerlink" title="二、解决 Bug"></a>二、解决 Bug</h2><p>打印个状态码，先初步诊断一下，看看 Bug 到底出在哪？</p><img src="https://files.sunguoqi.com/images/202312091444281.webp"><p>运行一下！</p><img src="https://files.sunguoqi.com/images/202312091445914.webp"><p><strong>418</strong>，还是第一次碰到这个状态码，<strong>Google 一下！</strong></p><img src="https://files.sunguoqi.com/images/202312091445494.webp"><img src="https://files.sunguoqi.com/images/202312091445751.webp"><p>我是一个茶壶，哈哈哈，IT 技术充满了乐趣。</p><img src="https://files.sunguoqi.com/images/202312091446934.webp"><p>阿这，不太理解。。。前辈虽然写了<code>UA列表</code>，但是在请求的时候竟然不加到<code>headers</code>里去，怪不得豆瓣检测出来你是个爬虫，哈哈。</p><p>纠正一下吧！</p><img src="https://files.sunguoqi.com/images/202312091446486.webp"><p>完美运行啦！</p><img src="https://files.sunguoqi.com/images/202312091447411.webp"><img src="https://files.sunguoqi.com/images/202312091447491.webp"><p>但是。。。</p><h2 id="三、新的需求"><a href="#三、新的需求" class="headerlink" title="三、新的需求"></a>三、新的需求</h2><p>每分享一个书籍/电影都要运行此代码生成海报？</p><p>那为啥不干脆直接开发个接口，只要像下面这样引入代码就可以直接调用了呢？</p><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">![](<span class="link">https://douban.sunguoqi.com？params= DOUBANURL</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="四、技术探索"><a href="#四、技术探索" class="headerlink" title="四、技术探索"></a>四、技术探索</h2><p>需求存在，开始探索实现方案。</p><p>将 Python 脚本做成 API？</p><p>只需要创建一个 Web 应用就可以啦。当用户附带正确的参数访问指定路由，就可以触发相应逻辑，最后返回数据。</p><p>那用什么技术来编写这个 Web 应用呢？</p><p>啊哈，有现成的 Web 框架，比如 Spring Boot，Django，Flask …</p><p><code>Spring boot</code>？</p><p>JavaWeb 那一套，对 Java 不熟，还没实际开发过，上手应该有点小困难❌</p><p><code>Django</code>？</p><p>Django 自学过一段时间，比较容易上手，但 Django <strong>“太健全了”</strong>，内置后台，数据库 ORM 映射，模版机制，表单处理，会话…，用在这个脚本上会不会略显笨拙，感觉有点大材小用了⏱️</p><p><code>Flask</code>？</p><p>听说 Flask 比较轻量，看看官网，好家伙，五行输出 <strong>hello world</strong>，我看行，就它了✅</p><img src="https://files.sunguoqi.com/images/202312091448253.webp"><h2 id="五、正式开发"><a href="#五、正式开发" class="headerlink" title="五、正式开发"></a>五、正式开发</h2><h3 id="1、失败尝试"><a href="#1、失败尝试" class="headerlink" title="1、失败尝试"></a>1、失败尝试</h3><p>本来想在<code>Windows</code>上用<code>VScode</code>开发好后再上传到服务器上来着，奈何配置开发环境就配置了好长时间。</p><p>一是在写入<code>Flask_App</code>到<code>Windows</code>系统环境变量时遇到了问题，二是在<code>VSCode</code>上运行<code>Flask</code>出现了问题。。。</p><p>算了，不配了，直接上服务器。</p><img src="https://files.sunguoqi.com/images/202312091448864.webp"><h3 id="2-Hello-world"><a href="#2-Hello-world" class="headerlink" title="2, Hello world"></a>2, Hello world</h3><p>在<code>Ubuntu</code>上轻松配置好了环境，然后敲入代码（复制粘贴）</p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">"/"</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&lt;p&gt;Hello, World!&lt;/p&gt;"</span></span><br></pre></td></tr></tbody></table></figure><p>你好，世界！就是这么优雅🎉</p><img src="https://files.sunguoqi.com/images/202312091448535.webp"><h3 id="3、编写路由逻辑"><a href="#3、编写路由逻辑" class="headerlink" title="3、编写路由逻辑"></a>3、编写路由逻辑</h3><p>经过一番猛如虎的操作后，我在原代码中加入了如下代码，于是大功告成！</p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> send_file</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">url</span>):</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> api_img_path</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">'/'</span>,methods=[<span class="string">'get'</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">img</span>():</span><br><span class="line">    url = flask.request.args.get(<span class="string">'url'</span>)</span><br><span class="line">    img = main(url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> send_file(img)</span><br></pre></td></tr></tbody></table></figure><img src="https://files.sunguoqi.com/images/202312091449847.webp"><img src="https://files.sunguoqi.com/images/202312091449813.webp"><p>当然，其实在此期间还经历了一番猛如虎的调试过程🥹</p><img src="https://files.sunguoqi.com/images/202312091449225.webp"><img src="https://files.sunguoqi.com/images/202312091450044.webp"><h2 id="六、大功告成"><a href="#六、大功告成" class="headerlink" title="六、大功告成"></a>六、大功告成</h2><p><strong>Github: <a href="https://github.com/sun0225SUN/DoubanPoster">https://github.com/sun0225SUN/DoubanPoster</a></strong></p><img src="https://files.sunguoqi.com/images/202312091451842.webp">]]></content>
      
      
      <categories>
          
          <category> 实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人生 21 岁，版本更新日志</title>
      <link href="/posts/83dcefb7/"/>
      <url>/posts/83dcefb7/</url>
      
        <content type="html"><![CDATA[<p><strong> -【重构】对人生方向进行了重写，励志做一名优秀的程序猿。</strong></p><p><strong> -【优化】摒弃了一些不必要的圈子，结识了更多志同道合的朋友。</strong></p><p><strong> -【新增】新增考研计划，跨考计算机专业，院校待定。</strong></p><p><strong> -【修复】修复了一些已知 Bug，优化了生活体验。</strong></p><figure class="highlight txt"><table><tbody><tr><td class="code"><pre><span class="line">Processing 21% |█ █ ▎        |</span><br></pre></td></tr></tbody></table></figure><p>当我们出生时，我们被初始化。</p><p>外貌身材是我们的 UI，生活是我们的核心业务。</p><p>在整个生命周期内，我们需要不断地学习，掌握各种技能，不断地增长自己的阅历，接触更多的人和事。</p><p>期间，我们会遇到各种各样的 BUG，我们需要不停地调试，修复，优化甚至是重构。</p><p>但同时，这个世界中有我们喜欢的人，有我们所热爱的事情。</p><p>生活既是我们的甲方，又是我们的乙方。</p><p>善良正直，温柔体贴，风趣幽默，知足上进。。。</p><p>我们每个人都应该做自己的产品经理，清晰我们每一步前进的方向，不断地自我突破，自我迭代。</p><p>浑浑噩噩，当我意识到要切切实实规划自己未来的时候，已经 21 岁了。</p><p>但也还好，才 21 岁，未来充满着无限可能。</p><p>承蒙时光不弃，勇敢地去追逐自己的未来吧！</p><p>祝自己 21 岁生日快乐🎂，生活值得被热爱</p><p><img src="https://files.sunguoqi.com/images/202311220210343.webp"></p>]]></content>
      
      
      <categories>
          
          <category> 生日快乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 感悟 </tag>
            
            <tag> 21 岁 </tag>
            
            <tag> 生日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 年终总结 &amp;&amp; 关于我自学爬虫的点滴经历</title>
      <link href="/posts/e78a2006/"/>
      <url>/posts/e78a2006/</url>
      
        <content type="html"><![CDATA[<blockquote><p>当你真心想做一件事情的时候，全世界都会帮你！</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大家好，我是小孙同学。很庆幸在我 20 岁这年，我遇到了我可以热爱一辈子的东西 —— 代码。</p><p>0 和 1 的二进制组合推动着时代的进步，代码中蕴藏着改变世界的能量。</p><img src="https://files.sunguoqi.com/images/202311250201465.webp"><p>但。。。</p><p>但我的学习探索之路并非一帆风顺，甚至是极其曲折。</p><p>不过值得骄傲和自豪的是，即便道阻且长，穷且益坚，我也从来没有想过放弃，从来没有想过就此潦草收场。</p><p>虽然我仅短短自学了十个月。但一路走来，我遇到过很多倾囊相授的老师，结交了很多志同道合的朋友，感受到了程序的魅力以及程序员世界里良好的开源和社交氛围。</p><p>我也小有成就，相继开通了自己的 CSDN，知乎，微信公众号…</p><p>也着手搭建了自己的个人网站<a href="https://www.sunguoqi.com/">https://www.sunguoqi.com</a></p><img src="https://files.sunguoqi.com/images/202311250202121.webp"><p>申请了自己的 Github 账号<a href="https://www.github.com/sun0225SUN">https://www.github.com/sun0225SUN</a></p><img src="https://files.sunguoqi.com/images/202311250202091.webp"><p>技术上，我现在也可以独立开发一些简单的 web 项目。</p><p><a href="https://www.bilibili.com/video/BV15L4y1E7xY">https://www.bilibili.com/video/BV15L4y1E7xY</a></p><p>（初次录制，音质很差，真的很抱歉）</p><img src="https://files.sunguoqi.com/images/202311250202778.webp"><p>编写一些基础的爬虫程序。</p><img src="https://files.sunguoqi.com/images/202311250203334.webp"><p>在学习期间，我切身体会到了什么叫做站在巨人的肩膀上，也 get 到了为什么图灵社区会把这句话印刻在出版的每一本的书中。</p><img src="https://files.sunguoqi.com/images/202311250203914.webp"><p>在我学习的过程中，我真的超级超级感激那些直接或者间接帮助过我的人。</p><p>所以便有了写这样一个系列文章的计划，以此来记录我学习路上的点滴感动，也借此向每一位帮助过我的老师，同学，朋友们表示感激。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>这是第一篇，是关于我自学网络爬虫的经历，我和《Python3 网络爬虫开发实战》这本书的缘分以及和崔庆才老师的微妙点滴。</p><h3 id="关于我学习爬虫的经历"><a href="#关于我学习爬虫的经历" class="headerlink" title="关于我学习爬虫的经历"></a>关于我学习爬虫的经历</h3><p>我学习一门技术，大概是通过购买相关的技术书籍，啃 B 站上的优质教学课程，查阅技术交流社区里相关的文章，翻阅官方文档，白嫖 Github 开源项目代码等等。</p><p>但我学习网络爬虫的道路并没有那么顺利。</p><h3 id="关于我和《Python3-网络爬虫开发实战》这本书"><a href="#关于我和《Python3-网络爬虫开发实战》这本书" class="headerlink" title="关于我和《Python3 网络爬虫开发实战》这本书"></a>关于我和《Python3 网络爬虫开发实战》这本书</h3><p>我首先是在 B 站上去了解什么是爬虫的脑海里有了相关的轮廓后，就会去找一些优质的书籍来看，电子书纸质书等等。</p><p>在选择有关爬虫的书籍时，我发现市场上关于网络爬虫的书并不多，相较于一些什么什么从入门到入土（精通）之类的书真的少太多了。</p><p>这为我寻找资料带来了不小的困扰，而且市场上仅有的爬虫相关的书籍，大体上写的都不是很详细（我在没购买之前是通过商品展示页面的书籍目录来看的，那时候还没有意识到学校图书馆这样一个宝藏。当时花了很多冤枉钱，因为买回来的书，发现作者梳理的思路并不适合我来学习，然后翻了两三下就放在书架上吃灰了）</p><p>当然，我并不是说这些书写的不好，我是说这些书写的不适合我，或者说不适合现阶段的我。</p><p>对于一个初学者来说，高浓缩的概括反而会让我缺乏一个过渡，很容易学着学着就半途而废了。</p><p>经过不断的试错和摸爬滚打，我最终最终终于遇到了崔庆才老师写的这本书——《Python3 网络爬虫开发实战》</p><img src="https://files.sunguoqi.com/images/202311250205899.webp"><p>那时候第二版还没有上市，我买的是第一版，可恨的是我买的还是盗版的，印刷质量很差。</p><p>对于盗版我这里就不想多说了，在国内盗版书的畅销在一定程度上的确传播了知识，但这无疑是对知识产权的不尊重和肆意践踏。</p><p>《Python3 网络爬虫开发实战》这本书的内容，我敢说比我在市面上看到的任何一本书都要详细，从它的厚度中我们便可以揣测出来。</p><img src="https://files.sunguoqi.com/images/202311250205308.webp"><p>如果你评价它由于过于照顾初学者而显得臃肿，我觉得在某种角度上也是可以成立的。</p><p>作为已经有爬虫经验的人来说，那些基础知识的确没必要讲。（比方说第一版中 python 第三方库的安装整个章节）</p><p>但站在初学者的视角，这些所谓的臃肿便是一步一步走向成功之门的阶梯。</p><p>我相信崔大也是考虑到了这个问题，才会做的这样一个权衡。</p><p><code>小遗憾</code></p><p>但是第一版我并没有学完，仅仅学到了可以做一个小爬虫的这样一个程度。</p><p>由于我买的是盗版书，印刷质量真的有点差，这一定程度上成为了我学习的阻碍。</p><p>后来我顺藤摸瓜找到了崔大的个人博客。</p><p><a href="https://cuiqingcai.com/">https://cuiqingcai.com</a></p><p>我发现崔大的个人博客中有关于《python3 网络爬虫开发实战》的博文专题（应该是先有的博客再有的书吧）。</p><p>博文中的内容大体和书上相似，但有一点小小的瑕疵就是 markdown 排版的问题，这也让我稍有膈应。</p><p>我现在仍还对盗版书和这个排版耿耿于怀，这也间接导致了我没有学完第一版。（当然也有其他原因，比如我自己的学习计划，时间安排等等）</p><h3 id="关于我和《Python3-网络爬虫开发实战》这本书的第二版"><a href="#关于我和《Python3-网络爬虫开发实战》这本书的第二版" class="headerlink" title="关于我和《Python3 网络爬虫开发实战》这本书的第二版"></a>关于我和《Python3 网络爬虫开发实战》这本书的第二版</h3><p>由于第一版的铺垫，我添加了崔庆才老师的两个公众号，<strong>【进击的 Coder】</strong>和 <strong>【崔庆才 | 静觅】</strong>，崔大发的每一篇文章我几乎都会看，真的很受用，我也能感受到了崔老师的良苦用心。</p><p>因为我基本上每篇文章都会看，所以我经历了<code>[崔大的新书获得了python之父Guido van Rossum的引荐语]</code>——&gt;<code>[新书封面确定]</code>——&gt;<code>[新书内容介绍]</code>——&gt;<code>[第一次给1000本书签名]</code>——&gt;<code>[正式上市]</code>——&gt;<code>[知识星球活动]</code>——&gt;<code>[第二次给1000本书签名]</code>——&gt;<code>[在星球里填写收货信息]</code>——&gt;<code>[每日一催，等待发货]</code>——&gt;<code>[收到包裹，拆箱晒朋友圈]</code>这样一个完整的时间轴。</p><img src="https://files.sunguoqi.com/images/202311250205115.webp"><p>我记得当时崔大是说能赶上今年的双十一上市销售的，可最后真的就是一拖再拖，11 月 26 号才正式上市的。</p><p>上市当天，崔大也做了相应的活动，我看到 99 元加入知识星球送签名书这样一个选项，二话不说就参与了这样一个活动。（我的行为是理智的，因为后面星球的价格涨到了 149 元）</p><p>不过加入知识星球的同学赠送的签名书需要崔大再签 1000 本书才可以发货（因为上次签的 1000 本一下子就售空了）</p><p>签名之后还需要塑封打包很多流程，我大概又等了半个多月才收到了我的包裹，等待的感觉真的太焦灼啦。</p><img src="https://files.sunguoqi.com/images/202311250206472.webp"><h3 id="关于《Python3-网络爬虫开发实战》第二版的内容"><a href="#关于《Python3-网络爬虫开发实战》第二版的内容" class="headerlink" title="关于《Python3 网络爬虫开发实战》第二版的内容"></a>关于《Python3 网络爬虫开发实战》第二版的内容</h3><p>我看一本书的内容会比较习惯先看他的目录，因为目录是整本书的一个基本架构，就像项目架构一样。</p><img src="https://files.sunguoqi.com/images/202311250206891.webp"><img src="https://files.sunguoqi.com/images/202311250206640.webp"><p>是的，你没有看错，900 多页的内容基本覆盖了爬虫开发的方方面面。</p><p>不过由于我也正在学习中，还没有啃完这本书，我现在只能放崔大对第二版内容的一个介绍，等我学完了，我会再写一篇文章的。</p><p><a href="https://mp.weixin.qq.com/s/66r5s2I-yX6OzGLRJBI0lg">https://mp.weixin.qq.com/s/66r5s2I-yX6OzGLRJBI0lg</a></p><img src="https://files.sunguoqi.com/images/202311250207945.webp"><h3 id="关于我对崔庆才老师爬虫案例平台-Scrape-的看法"><a href="#关于我对崔庆才老师爬虫案例平台-Scrape-的看法" class="headerlink" title="关于我对崔庆才老师爬虫案例平台 Scrape 的看法"></a>关于我对崔庆才老师爬虫案例平台 Scrape 的看法</h3><p>如果你认真阅读了崔大对这本书的内容介绍的话，你会发现一个耀眼的亮点。</p><p><code>Scrape 案例平台</code></p><p><a href="https://scrape.center/">https://scrape.center</a></p><img src="https://files.sunguoqi.com/images/202311250207185.webp"><p>这是一个怎样的存在呢？下面是我的理解。</p><p>我们都知道学习爬虫，实战是不可或缺的。可如果我们直接爬取现成的网站，会遇到很多问题。</p><ul><li>第一、网站改版，代码无法正常运行。</li></ul><p>目标网站一旦改版，通过书本上的教程跑出来的代码就无法继续正常运行了，这是一个非常大的问题，也会极大挫败学习者的心态。</p><ul><li>第二、对目标网站带来一定的负荷，不良心。</li></ul><p>爬虫带来的流量如果过大，就会对其正常的运营造成干扰，我相信我们的出发点都是去学习一门技术，而不是搞破坏浪费资源，这样真的很不良心</p><ul><li>第三、不尊重目标网站信息的著作权，易产生纠纷。</li></ul><p>我相信网站的开发者，管理者，掌权者都很乐意去共享信息，这是一种无私的开源精神。像豆瓣，百度，高德地图开放平台等等都有提供相应的 API。</p><p>可当我们直接对网站进行爬取的时候，自觉不自觉的就进入了一个灰色地带，会造成一些侵权行为，即便有君子协议的存在（robots.txt）</p><p>而崔大自己做的案例平台 Scrape 彻底的解决了这些问题。</p><ul><li>第一、书籍和案例平台配合，不用担心爬取的目标网站改版。</li><li>第二、崔大自己的案例平台，崔大自掏腰包允许任何人来爬。</li><li>第三、案例内容不涉及任何商业行为，不会带来任何法律问题。</li></ul><p>很大程度上，当我看到 Scrape 这样一个案例平台的时候，我就知道，其他的任何爬虫书，爬虫资料我都不需要了。</p><h3 id="关于我阅读《Python3-网络爬虫开发实战》这本书的感觉"><a href="#关于我阅读《Python3-网络爬虫开发实战》这本书的感觉" class="headerlink" title="关于我阅读《Python3 网络爬虫开发实战》这本书的感觉"></a>关于我阅读《Python3 网络爬虫开发实战》这本书的感觉</h3><p>见字如面，在读一本书的时候就像是在和书的作者进行交流，我喜欢这种感觉，在读《Python3 网络爬虫开发实战》这本书的时候也是如此。</p><p>崔庆才老师的书让我阅读起来很丝滑，因为我也经常写博客，做笔记。我完全可以厘清崔老师写书的思路，从而更加清晰我下一步的学习方向，然后多敲代码，多加练习，从而提升自己的技术能力。</p><h3 id="关于崔庆才老师的亲和力"><a href="#关于崔庆才老师的亲和力" class="headerlink" title="关于崔庆才老师的亲和力"></a>关于崔庆才老师的亲和力</h3><p>在自学的过程中，我加入过很多学习交流群。有些群里真的是卧虎藏龙，群友们各个都是人才，说话又好听，我超喜欢群里的，和群友们进行交流真的受益匪浅。</p><p>崔大也同样运营了这样一个学习交流群。</p><img src="https://files.sunguoqi.com/images/202311250207769.webp"><p>最最最值得我所钦佩的是，崔大经常在群里为群友们解决问题，这。。。崔大时间这么充裕的么，慕了！（当然我知道崔大有个高仿小号，有时我也分不清哪个是真身）</p><p>所以我们可以思考一下，高频度的交流会带来什么？</p><p>带来的是崔大的亲和力。</p><p>我在阅读书的同时，我还有作者的微信。我和作者发消息，作者不会耍大牌，还会回复我。天呢，这不就是追星追到了的感觉么。</p><h3 id="我想成为像崔庆才老师这样的人"><a href="#我想成为像崔庆才老师这样的人" class="headerlink" title="我想成为像崔庆才老师这样的人"></a>我想成为像崔庆才老师这样的人</h3><p>在我眼里，崔庆才老师和 Vue.js 的开发者尤雨溪都创造出了令人惊艳的东西。</p><img src="https://files.sunguoqi.com/images/202311250207457.webp"><img src="https://files.sunguoqi.com/images/202311250208252.webp"><p>二位都是明星人物，我是两位大佬的超级粉丝，中国开发者需要这样的领军人物。</p><p>袒露心声，我想成为这样的人，为行业，为社会做出力所能及的贡献。虽然很难，任重而道远，但我一定会好好努力的。</p><p>总之，可以预见的是崔大的《Python3 网络爬虫开发实战》第二版会引领又一个“全民”学习网络爬虫的浪潮。</p><p>正如 python 之父的引荐语所说的一样。</p><p><code> this book will help more people understand Python and web crawling/scraping.</code></p><p><code>这本书会帮助更多人去学习python和网络爬虫。</code></p><blockquote><p>I am happy to see that Python is so widely used in the Chinese IT community. I hope this book will help more people understand Python and web crawling/scraping.<br> —— Guido van Rossum, creator of Python, Distinguished Engineer, Microsoft</p></blockquote><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>最后，我想引用<strong>鱼 C 小甲鱼</strong>的一段话结束本篇文章。（小甲鱼（李佳宇）也是我编程上的启蒙老师）</p><p>我们一直在努力耕耘这么一片简单的土壤，虽然没有达到尽善尽美，但已初见雏形。</p><p>十年前我们仰望星空，十年后我们将俯视大地，未来的天空，必将为我们留下一片灿烂的曙光！</p><blockquote><p>我们一直在努力耕耘这么一片简单的土壤，虽然没有达到尽善尽美，但在大家的努力下，已初见雏形，并且在论坛上已经聚拢了很多超厉害的“大牛”!<br>Fake it till they make it-假装直到真的成功。<br>最后还是那句话，小甲鱼渴望和大家一起成长，十年前我们仰望星空，十年后我们将俯视大地。未来的天空，必将为我们留下一片灿烂的曙光！<br> ——小甲鱼 2019 年 3 月</p></blockquote><p>愿你我都可以不负人间理想，找到自己的热爱，真心去做一件事情，正如本文标题所言，当你真正想去做一件事情的时候，全世界都会来帮你。</p>]]></content>
      
      
      <categories>
          
          <category> 年终总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年终总结 </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> 好物推荐 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
